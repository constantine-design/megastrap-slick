/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./files.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./files.js":
/*!******************!*\
  !*** ./files.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _source_bs_grid_block_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./source/bs-grid/block.js */ \"./source/bs-grid/block.js\");\n/* harmony import */ var _source_bs_grid_block_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_source_bs_grid_block_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _source_slick_slider_classic_block_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./source/slick-slider-classic/block.js */ \"./source/slick-slider-classic/block.js\");\n/* harmony import */ var _source_slick_slider_classic_block_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_source_slick_slider_classic_block_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _source_slick_slider_html_block_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./source/slick-slider-html/block.js */ \"./source/slick-slider-html/block.js\");\n/* harmony import */ var _source_slick_slider_html_block_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_source_slick_slider_html_block_js__WEBPACK_IMPORTED_MODULE_2__);\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./files.js?");

/***/ }),

/***/ "./source/bs-grid/block.js":
/*!*********************************!*\
  !*** ./source/bs-grid/block.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _attributes;\n\nvar _commonFunctions = __webpack_require__(/*! ../common/common-functions.js */ \"./source/common/common-functions.js\");\n\nvar _PannelUltimateBgControl = __webpack_require__(/*! ../common/PannelUltimateBgControl.js */ \"./source/common/PannelUltimateBgControl.js\");\n\nvar _controlsChild = __webpack_require__(/*! ./controls-child.js */ \"./source/bs-grid/controls-child.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** @jsx wp.element.createElement */\n\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar InnerBlocks = wp.blockEditor.InnerBlocks;\nvar _wp$blockEditor = wp.blockEditor,\n    BlockControls = _wp$blockEditor.BlockControls,\n    InspectorControls = _wp$blockEditor.InspectorControls,\n    BlockEdit = _wp$blockEditor.BlockEdit;\nvar _wp$element = wp.element,\n    useState = _wp$element.useState,\n    Fragment = _wp$element.Fragment,\n    useEffect = _wp$element.useEffect;\nvar useSelect = wp.data.useSelect;\nvar Button = wp.components.Button;\n\n\nvar ColBlockIcon = function ColBlockIcon() {\n  return wp.element.createElement(\n    'svg',\n    { width: '20', height: '20', viewBox: '0 0 20 20', fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },\n    wp.element.createElement('path', { d: 'M19 2H1V18H19V2Z', fill: '#C4C4C4' }),\n    wp.element.createElement('path', { d: 'M13 3H7V17H13V3Z', fill: 'white', stroke: '#3498DB', 'stroke-width': '2' })\n  );\n};\n\nfunction addBlockClass(props) {\n  return props.attributes.className ? \" \" + props.attributes.className : \"\";\n};\nfunction addCenterClass(props) {\n  return props.attributes.halign ? \" \" + props.attributes.halign : \"\";\n};\nfunction addValignClass(props) {\n  return props.attributes.valign ? \" \" + props.attributes.valign : \"\";\n};\n\n/*-----------------------------------------------------------------------------*/\n/*                              CHILD BLOCK BEGIN                              */\n/*-----------------------------------------------------------------------------*/\n\n/* common functions */\nfunction bsGetColClasses(props) {\n  var classes = \"\";\n  if (props.attributes.colBreakpoint != 0) classes += \" col-\" + props.attributes.colBreakpoint;\n  if (props.attributes.colSmBreakpoint != 0) classes += \" col-sm-\" + props.attributes.colSmBreakpoint;\n  if (props.attributes.colMdBreakpoint != 0) classes += \" col-md-\" + props.attributes.colMdBreakpoint;\n  if (props.attributes.colLgBreakpoint != 0) classes += \" col-lg-\" + props.attributes.colLgBreakpoint;\n  if (props.attributes.colXlBreakpoint != 0) classes += \" col-xl-\" + props.attributes.colXlBreakpoint;\n  if (classes == \"\") classes = \" col\";\n  return classes;\n}\n\nregisterBlockType('k-blocks-bs-grid-child/k-blocks', {\n  title: __('Bootstrap Column'),\n  icon: ColBlockIcon,\n  category: 'k-common-blocks',\n  parent: ['k-blocks-bs-grid-child'],\n  supports: { html: false, className: false },\n  attributes: (_attributes = {\n    className: { type: 'string', default: '' },\n    /* breakpoints */\n    colBreakpoint: { type: 'number', default: 0 },\n    colSmBreakpoint: { type: 'number', default: 0 }\n  }, _defineProperty(_attributes, 'colSmBreakpoint', { type: 'number', default: 0 }), _defineProperty(_attributes, 'colMdBreakpoint', { type: 'number', default: 6 }), _defineProperty(_attributes, 'colLgBreakpoint', { type: 'number', default: 0 }), _defineProperty(_attributes, 'colXlBreakpoint', { type: 'number', default: 0 }), _defineProperty(_attributes, 'color', { type: 'string', default: 'initial' }), _defineProperty(_attributes, 'bgColor', { type: 'string', default: 'transparent' }), _defineProperty(_attributes, 'bgGradient', { type: 'string', default: false }), _defineProperty(_attributes, 'bgImage', { type: 'string' }), _defineProperty(_attributes, 'bgImageId', { type: 'integer', default: 0 }), _defineProperty(_attributes, 'bgImageType', { type: 'string', default: 'cover' }), _defineProperty(_attributes, 'bgImageFocal', { type: 'object', default: { x: '0.5', y: '0.5' } }), _attributes),\n\n  /*-----------------------------------------------------------------------------*/\n  /*                                EDIT CHILD                                   */\n  /*-----------------------------------------------------------------------------*/\n\n  edit: function edit(props) {\n\n    var hasInnerBlocks = useSelect(function (select) {\n      return select('core/block-editor').getBlocks(props.clientId).length > 0;\n    }, [props.clientId]);\n    var atts = props.attributes;\n\n    return wp.element.createElement(\n      Fragment,\n      null,\n      wp.element.createElement(_controlsChild.ControlsChild, { propsObject: props }),\n      wp.element.createElement('div', {\n        'class': 'k-bs-grid-admin-color-wrapper',\n        style: {\n          color: atts.color,\n          backgroundColor: atts.bgColor,\n          backgroundImage: (atts.bgGradient ? atts.bgGradient : 'none') + ',' + (atts.bgImage ? \"url('\" + atts.bgImage + \"')\" : 'none'),\n          backgroundSize: atts.bgImageType == 'cover' ? 'auto, cover' : atts.bgImageType == 'contain' ? 'auto, contain' : 'auto, auto',\n          backgroundRepeat: atts.bgImageType != 'repeat' ? 'no-repeat,no-repeat' : 'no-repeat,repeat',\n          backgroundPosition: atts.bgImageType != 'repeat' ? 'center,' + atts.bgImageFocal.x * 100 + '% ' + atts.bgImageFocal.y * 100 + '%' : 'center,center',\n          position: 'absolute',\n          top: '0', left: '0', right: '0', bottom: '0', zIndex: '0'\n        }\n      }),\n      wp.element.createElement(\n        'span',\n        { style: { color: atts.color } },\n        wp.element.createElement(InnerBlocks, {\n          renderAppender: hasInnerBlocks ? undefined : function () {\n            return wp.element.createElement(InnerBlocks.ButtonBlockAppender, null);\n          }\n        })\n      )\n    );\n  },\n\n\n  /*-----------------------------------------------------------------------------*/\n  /*                                SAVE CHILD                                   */\n  /*-----------------------------------------------------------------------------*/\n\n  save: function save(props) {\n\n    var atts = props.attributes;\n\n    return wp.element.createElement(\n      Fragment,\n      null,\n      wp.element.createElement(\n        'div',\n        {\n          className: \"k-bs-grid-col position-relative\" + addBlockClass(props) + bsGetColClasses(props),\n          style: {\n            color: atts.color,\n            backgroundColor: atts.bgColor,\n            backgroundImage: (atts.bgGradient ? atts.bgGradient : 'none') + ',' + (atts.bgImage ? \"url('\" + atts.bgImage + \"')\" : 'none'),\n            backgroundSize: atts.bgImageType == 'cover' ? 'auto, cover' : atts.bgImageType == 'contain' ? 'auto, contain' : 'auto, auto',\n            backgroundRepeat: atts.bgImageType != 'repeat' ? 'no-repeat,no-repeat' : 'no-repeat,repeat',\n            backgroundPosition: atts.bgImageType != 'repeat' ? 'center,' + atts.bgImageFocal.x * 100 + '% ' + atts.bgImageFocal.y * 100 + '%' : 'center,center'\n          }\n        },\n        wp.element.createElement(InnerBlocks.Content, null)\n      )\n    );\n  }\n});\n\n/*=============================================================================*/\n/*                ADD CLASS TO NESTED BLOCK WRAPPER WITH FILTER                */\n/*=============================================================================*/\n\nvar withCustomClassName = wp.compose.createHigherOrderComponent(function (BlockListBlock) {\n  return function (props) {\n    if (props.name !== 'k-blocks-bs-grid-child/k-blocks') return wp.element.createElement(BlockListBlock, props);\n    var atts = props.attributes;\n    return wp.element.createElement(BlockListBlock, _extends({}, props, { className: \"k-bs-grid-admin-col mx-0\" + bsGetColClasses(props) + addBlockClass(props) }));\n  };\n}, 'withClientIdClassName');\n\nwp.hooks.addFilter('editor.BlockListBlock', 'column/filter-blocks', withCustomClassName);\n//# sourceMappingURL=block.js.map\n\n//# sourceURL=webpack:///./source/bs-grid/block.js?");

/***/ }),

/***/ "./source/bs-grid/controls-child.js":
/*!******************************************!*\
  !*** ./source/bs-grid/controls-child.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ControlsChild = ControlsChild;\n\nvar _PannelUltimateBgControl = __webpack_require__(/*! ../common/PannelUltimateBgControl.js */ \"./source/common/PannelUltimateBgControl.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /** @jsx wp.element.createElement */\n\nfunction ControlsChild(args) {\n\n  /* definitions */\n\n  var props = args.propsObject;\n  var atts = props.attributes;\n\n  var __ = wp.i18n.__;\n  var _wp$blockEditor = wp.blockEditor,\n      MediaUpload = _wp$blockEditor.MediaUpload,\n      MediaUploadCheck = _wp$blockEditor.MediaUploadCheck,\n      MediaPlaceholder = _wp$blockEditor.MediaPlaceholder,\n      MediaReplaceFlow = _wp$blockEditor.MediaReplaceFlow;\n  var _wp$blockEditor2 = wp.blockEditor,\n      BlockVerticalAlignmentToolbar = _wp$blockEditor2.BlockVerticalAlignmentToolbar,\n      BlockControls = _wp$blockEditor2.BlockControls,\n      InspectorControls = _wp$blockEditor2.InspectorControls,\n      AlignmentToolbar = _wp$blockEditor2.AlignmentToolbar;\n  var _wp$components = wp.components,\n      Button = _wp$components.Button,\n      ToolbarGroup = _wp$components.ToolbarGroup,\n      Toolbar = _wp$components.Toolbar,\n      ToolbarButton = _wp$components.ToolbarButton,\n      Dashicon = _wp$components.Dashicon,\n      SVG = _wp$components.SVG,\n      Path = _wp$components.Path,\n      PanelBody = _wp$components.PanelBody,\n      PanelRow = _wp$components.PanelRow,\n      SelectControl = _wp$components.SelectControl,\n      RangeControl = _wp$components.RangeControl,\n      Flex = _wp$components.Flex,\n      FlexItem = _wp$components.FlexItem,\n      FlexBlock = _wp$components.FlexBlock,\n      Icon = _wp$components.Icon,\n      CheckboxControl = _wp$components.CheckboxControl,\n      Disabled = _wp$components.Disabled;\n  var _wp$element = wp.element,\n      useState = _wp$element.useState,\n      useEffect = _wp$element.useEffect,\n      Fragment = _wp$element.Fragment;\n\n\n  function BsBreakPoint(args) {\n    var propName = args.attributeName;\n    return wp.element.createElement(\n      Flex,\n      { style: { paddingLeft: '0.8rem', paddingRight: '0.8rem' } },\n      wp.element.createElement(\n        FlexItem,\n        { style: { paddingTop: '0.5rem', paddingBottom: '0.5rem' } },\n        wp.element.createElement(CheckboxControl, {\n          label: args.label,\n          checked: Boolean(props.attributes[propName]),\n          onChange: function onChange(newvalue) {\n            if (Boolean(props.attributes[propName])) props.setAttributes(_defineProperty({}, propName, 0));else props.setAttributes(_defineProperty({}, propName, 6));\n          }\n        })\n      ),\n      wp.element.createElement(\n        FlexBlock,\n        null,\n        Boolean(props.attributes[propName]) && wp.element.createElement(RangeControl, {\n          value: props.attributes[propName],\n          onChange: function onChange(newvalue) {\n            return props.setAttributes(_defineProperty({}, propName, newvalue));\n          },\n          min: 1,\n          max: 12\n        })\n      )\n    );\n  }\n\n  /* output */\n\n  return wp.element.createElement(\n    Fragment,\n    null,\n    wp.element.createElement(BlockControls, null),\n    wp.element.createElement(\n      InspectorControls,\n      null,\n      wp.element.createElement(\n        PanelBody,\n        { title: __('Grid') },\n        wp.element.createElement(\n          'div',\n          { className: 'k-bs-grid-cols-controls' },\n          wp.element.createElement(BsBreakPoint, { attributeName: 'colBreakpoint', label: 'XS' }),\n          wp.element.createElement(BsBreakPoint, { attributeName: 'colSmBreakpoint', label: 'SM' }),\n          wp.element.createElement(BsBreakPoint, { attributeName: 'colMdBreakpoint', label: 'MD' }),\n          wp.element.createElement(BsBreakPoint, { attributeName: 'colLgBreakpoint', label: 'LG' }),\n          wp.element.createElement(BsBreakPoint, { attributeName: 'colXlBreakpoint', label: 'XL' })\n        )\n      ),\n      wp.element.createElement(_PannelUltimateBgControl.PannelUltimateBgControl\n      // first toolbar: color block\n      , { colorValue: atts.color,\n        onColorChange: function onColorChange(newVal) {\n          return props.setAttributes({ color: newVal });\n        },\n        bgColorValue: atts.bgColor,\n        onBgColorChange: function onBgColorChange(newVal) {\n          return props.setAttributes({ bgColor: newVal });\n        }\n        // second toolbar: image block\n        , bgImgUrlValue: atts.bgImage,\n        bgImgIdValue: atts.bgImageId,\n        onBgImgSelect: function onBgImgSelect(newVal) {\n          return props.setAttributes({ bgImage: newVal.url, bgImageId: newVal.id });\n        },\n        onSetDefaultClick: function onSetDefaultClick() {\n          return props.setAttributes({ bgImage: \"none\", bgImageId: 0 });\n        }\n        // bg focal for second toolbar: optional\n        , bgFocalValue: atts.bgImageFocal,\n        onBgImageFocalChange: function onBgImageFocalChange(newVal) {\n          return props.setAttributes({ bgImageFocal: newVal });\n        }\n        // bg style for second toolbar: optional\n        , bgStyleValue: atts.bgImageType,\n        onBgStyleChange: function onBgStyleChange(newVal) {\n          return props.setAttributes({ bgImageType: newVal });\n        }\n        // third toolbar: gradient overlay block\n        , gradientOvelayValue: atts.bgGradient,\n        onGradientOverlayChange: function onGradientOverlayChange(newVal) {\n          return props.setAttributes({ bgGradient: newVal });\n        }\n      })\n    )\n  );\n}\n//# sourceMappingURL=controls-child.js.map\n\n//# sourceURL=webpack:///./source/bs-grid/controls-child.js?");

/***/ }),

/***/ "./source/common/PannelUltimateBgControl.js":
/*!**************************************************!*\
  !*** ./source/common/PannelUltimateBgControl.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.PannelUltimateBgControl = PannelUltimateBgControl;\n/** @jsx wp.element.createElement */\n\n/* BG CONTROL PANNEL\r\n-----------------------------------------------------*/\n\n/* USAGE\r\n\r\n// attributes fot PannelUltimateBgControl\r\ncolor: { type: 'string', default: 'inherit', },\r\nbgColor: { type: 'string', default: 'transparent', },\r\nbgGradient: { type: 'string', default: 'none', },\r\nbgImage: { type: 'string', default: 'none', },\r\nbgImageId: { type: 'integer', default: 0 },\r\nbgImageType: { type: 'string', default: 'cover', },\r\n\r\n// Link inspectorControls all toolbars are optional remoove values to disable them\r\n<PannelUltimateBgControl\r\n\t// first toolbar: color block\r\n\tcolorValue={ props.attributes.color }\r\n\tonColorChange={ ( newVal ) => props.setAttributes({ color: newVal }) }\r\n\tbgColorValue={ props.attributes.bgColor }\r\n\tonBgColorChange={ ( newVal ) => props.setAttributes({ bgColor: newVal }) }\r\n\t// second toolbar: image block\r\n\tbgImgUrlValue={ props.attributes.bgImage }\r\n\tbgImgIdValue={ props.attributes.bgImageId }\r\n\tonBgImgSelect={ ( newVal ) => props.setAttributes({ bgImage: newVal.url, bgImageId: newVal.id }) }\r\n\tonSetDefaultClick={ () => props.setAttributes({ bgImage: \"none\", bgImageId: 0 }) }\r\n\t// bg focal for second toolbar: optional\r\n\tbgFocalValue={ props.attributes.bgImageFocal }\r\n\tonBgImageFocalChange={ ( newVal ) => props.setAttributes({ bgImageFocal: newVal }); }\r\n\t// bg style for second toolbar: optional\r\n\tbgStyleValue={ props.attributes.bgImageType }\r\n\tonBgStyleChange={ ( newVal ) => props.setAttributes({ bgImageType: newVal }) }\r\n\t// third toolbar: gradient overlay block\r\n\tgradientOvelayValue={ props.attributes.bgGradient }\r\n\tonGradientOverlayChange={ ( newVal ) => props.setAttributes({ bgGradient: newVal }) }\r\n/>\r\n\r\n*/\n\nfunction PannelUltimateBgControl(args) {\n\tvar __ = wp.i18n.__;\n\tvar _wp$blockEditor = wp.blockEditor,\n\t    MediaUpload = _wp$blockEditor.MediaUpload,\n\t    MediaUploadCheck = _wp$blockEditor.MediaUploadCheck,\n\t    MediaPlaceholder = _wp$blockEditor.MediaPlaceholder,\n\t    __experimentalPanelColorGradientSettings = _wp$blockEditor.__experimentalPanelColorGradientSettings;\n\tvar _wp$components = wp.components,\n\t    Button = _wp$components.Button,\n\t    Dashicon = _wp$components.Dashicon,\n\t    SVG = _wp$components.SVG,\n\t    Path = _wp$components.Path,\n\t    PanelBody = _wp$components.PanelBody,\n\t    PanelRow = _wp$components.PanelRow,\n\t    SelectControl = _wp$components.SelectControl,\n\t    FocalPointPicker = _wp$components.FocalPointPicker;\n\tvar Fragment = wp.element.Fragment;\n\n\tif (args.colorValue == undefined) {\n\t\targs.colorValue = 'inherit';\n\t}\n\tif (args.bgColorValue == undefined) {\n\t\targs.bgColorValue = 'transparent';\n\t}\n\tif (args.bgImgUrlValue == undefined) {\n\t\targs.bgImgUrlValue = 'none';\n\t}\n\tif (args.bgImgIdValue == undefined) {\n\t\targs.bgImgIdValue = 0;\n\t}\n\tif (args.bgStyleValue == undefined) {\n\t\targs.bgStyleValue = 'cover';\n\t}\n\tif (args.gradientOvelayValue == undefined) {\n\t\targs.gradientOvelayValue = 'none';\n\t}\n\tvar colorSettings = [];\n\tif (args.onColorChange != undefined) colorSettings.push({ label: __('Text Color'), colorValue: args.colorValue, onColorChange: args.onColorChange });\n\tif (args.onBgColorChange != undefined) colorSettings.push({ label: __('Background Color'), colorValue: args.bgColorValue, onColorChange: args.onBgColorChange });\n\n\tvar overlayGradients = [{ name: __('Darker 25%', 'megastrap'), gradient: 'linear-gradient(90deg,rgba(0,0,0,0.25) 0%, rgba(0,0,0,0.25) 100%)', slug: 'quorter-darker' }, { name: __('Darker 50%', 'megastrap'), gradient: 'linear-gradient(90deg,rgba(0,0,0,0.5) 0%, rgba(0,0,0,0.5) 100%)', slug: 'half-darker' }, { name: __('Darker 75%', 'megastrap'), gradient: 'linear-gradient(90deg,rgba(0,0,0,0.75) 0%, rgba(0,0,0,0.75) 100%)', slug: 'two-third-darker' }, { name: __('Lighter 25%', 'megastrap'), gradient: 'linear-gradient(90deg,rgba(255,255,255,0.25) 0%, rgba(255,255,255,0.25) 100%)', slug: 'quorter-lighter' }, { name: __('Lighter 50%', 'megastrap'), gradient: 'linear-gradient(90deg,rgba(255,255,255,0.5) 0%, rgba(255,255,255,0.5) 100%)', slug: 'half-lighter' }, { name: __('Lighter 75%', 'megastrap'), gradient: 'linear-gradient(90deg,rgba(255,255,255,0.75) 0%, rgba(255,255,255,0.75) 100%)', slug: 'two-third-lighter' }];\n\n\treturn wp.element.createElement(\n\t\tFragment,\n\t\tnull,\n\t\t(args.onColorChange != undefined || args.onBgColorChange != undefined) && wp.element.createElement(__experimentalPanelColorGradientSettings, {\n\t\t\ttitle: __('Default colors'),\n\t\t\tsettings: colorSettings,\n\t\t\tinitialOpen: false\n\t\t}),\n\t\targs.onBgImgSelect != undefined && args.onSetDefaultClick != undefined && wp.element.createElement(\n\t\t\tPanelBody,\n\t\t\t{ title: __('Background image'), initialOpen: false },\n\t\t\twp.element.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'editor-slide-featured-image', style: { marginBottom: \"24px\" } },\n\t\t\t\twp.element.createElement(\n\t\t\t\t\tMediaUploadCheck,\n\t\t\t\t\tnull,\n\t\t\t\t\twp.element.createElement(MediaUpload, {\n\t\t\t\t\t\tonSelect: args.onBgImgSelect,\n\t\t\t\t\t\tvalue: args.bgImgIdValue,\n\t\t\t\t\t\tallowedTypes: ['image'],\n\t\t\t\t\t\trender: function render(_ref) {\n\t\t\t\t\t\t\tvar open = _ref.open;\n\t\t\t\t\t\t\treturn wp.element.createElement(\n\t\t\t\t\t\t\t\tButton,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tclassName: args.bgImgUrlValue == \"none\" ? 'editor-post-featured-image__toggle' : 'editor-post-featured-image__preview',\n\t\t\t\t\t\t\t\t\tonClick: open\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\targs.bgImgUrlValue == \"none\" && __('Choose an image'),\n\t\t\t\t\t\t\t\t(args.bgImgUrlValue != \"none\" && args.onBgImageFocalChange == undefined || args.bgImgUrlValue != \"none\" && args.bgStyleValue != 'cover') && wp.element.createElement('div', {\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\tbackgroundImage: \"url('\" + args.bgImgUrlValue + \"')\",\n\t\t\t\t\t\t\t\t\t\tbackgroundSize: args.bgStyleValue == 'repeat' ? \"60%\" : args.bgStyleValue == 'contain' ? \"contain\" : \"cover\",\n\t\t\t\t\t\t\t\t\t\tbackgroundRepeat: args.bgStyleValue == 'repeat' ? \"repeat\" : \"no-repeat\",\n\t\t\t\t\t\t\t\t\t\tbackgroundPosition: args.bgStyleValue == 'repeat' ? \"top left\" : \"center\",\n\t\t\t\t\t\t\t\t\t\theight: \"180px\",\n\t\t\t\t\t\t\t\t\t\tmarginBottom: \"20px\",\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#f0f0f0\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t\targs.onBgImageFocalChange != undefined && args.bgImgUrlValue != \"none\" && args.bgStyleValue == 'cover' && wp.element.createElement(FocalPointPicker, {\n\t\t\t\t\turl: args.bgImgUrlValue\n\t\t\t\t\t//dimensions={ dimensions }\n\t\t\t\t\t, value: args.bgFocalValue,\n\t\t\t\t\tonChange: args.onBgImageFocalChange\n\t\t\t\t}),\n\t\t\t\targs.bgImgUrlValue != \"none\" && wp.element.createElement(\n\t\t\t\t\tFragment,\n\t\t\t\t\tnull,\n\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\tMediaUploadCheck,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\twp.element.createElement(MediaUpload, {\n\t\t\t\t\t\t\ttitle: __('Replace image'),\n\t\t\t\t\t\t\tvalue: args.bgImgIdValue,\n\t\t\t\t\t\t\tonSelect: args.onBgImgSelect,\n\t\t\t\t\t\t\tallowedTypes: ['image'],\n\t\t\t\t\t\t\trender: function render(_ref2) {\n\t\t\t\t\t\t\t\tvar open = _ref2.open;\n\t\t\t\t\t\t\t\treturn wp.element.createElement(\n\t\t\t\t\t\t\t\t\tButton,\n\t\t\t\t\t\t\t\t\t{ onClick: open, isDefault: true, isLarge: true },\n\t\t\t\t\t\t\t\t\t__('Replace image')\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\tMediaUploadCheck,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t\tButton,\n\t\t\t\t\t\t\t{ onClick: args.onSetDefaultClick, isLink: true, isDestructive: true, style: { marginLeft: \"20px\" } },\n\t\t\t\t\t\t\t__('Remove image')\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\targs.bgImgUrlValue != \"none\" && args.onBgStyleChange != undefined && wp.element.createElement(SelectControl, {\n\t\t\t\tlabel: __('Background type'),\n\t\t\t\tvalue: args.bgStyleValue,\n\t\t\t\tonChange: args.onBgStyleChange,\n\t\t\t\toptions: [{ value: 'cover', label: __('Cover') }, { value: 'contain', label: __('Contain') }]\n\t\t\t})\n\t\t),\n\t\targs.onGradientOverlayChange != undefined && wp.element.createElement(__experimentalPanelColorGradientSettings, {\n\t\t\ttitle: __('Gradient overlay'),\n\t\t\tinitialOpen: false,\n\t\t\tsettings: [{\n\t\t\t\tlabel: __('Background Overlay'),\n\t\t\t\tgradients: overlayGradients,\n\t\t\t\tgradientValue: args.gradientOvelayValue,\n\t\t\t\tonGradientChange: args.onGradientOverlayChange\n\t\t\t}]\n\t\t})\n\t);\n}\n//# sourceMappingURL=PannelUltimateBgControl.js.map\n\n//# sourceURL=webpack:///./source/common/PannelUltimateBgControl.js?");

/***/ }),

/***/ "./source/common/common-functions.js":
/*!*******************************************!*\
  !*** ./source/common/common-functions.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n\tvalue: true\r\n});\r\nexports.bootstrapValignClasses = bootstrapValignClasses;\r\n\r\n/** @jsx wp.element.createElement */\r\n\r\n/*===================================================*/\r\n/*                 HELPER FUNCTIONS                  */\r\n/*===================================================*/\r\n\r\n/* valign classes change */\r\nfunction bootstrapValignClasses(valign) {\r\n\tswitch (valign) {\r\n\t\tcase 'top':\r\n\t\t\treturn 'd-flex flex-column justify-content-start';\r\n\t\tcase 'center':\r\n\t\t\treturn 'd-flex flex-column justify-content-center';\r\n\t\tcase 'bottom':\r\n\t\t\treturn 'd-flex flex-column justify-content-end';\r\n\t}\r\n\treturn 'd-flex flex-column';\r\n}\r\n\n\n//# sourceURL=webpack:///./source/common/common-functions.js?");

/***/ }),

/***/ "./source/slick-slider-classic/block.js":
/*!**********************************************!*\
  !*** ./source/slick-slider-classic/block.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _commonFunctions = __webpack_require__(/*! ../common/common-functions.js */ \"./source/common/common-functions.js\");\n\nvar _PannelUltimateBgControl = __webpack_require__(/*! ../common/PannelUltimateBgControl.js */ \"./source/common/PannelUltimateBgControl.js\");\n\nvar _controls = __webpack_require__(/*! ./controls.js */ \"./source/slick-slider-classic/controls.js\");\n\n/** @jsx wp.element.createElement */\n\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar _wp$blockEditor = wp.blockEditor,\n    InnerBlocks = _wp$blockEditor.InnerBlocks,\n    MediaUpload = _wp$blockEditor.MediaUpload,\n    MediaUploadCheck = _wp$blockEditor.MediaUploadCheck;\nvar _wp$blockEditor2 = wp.blockEditor,\n    BlockControls = _wp$blockEditor2.BlockControls,\n    InspectorControls = _wp$blockEditor2.InspectorControls;\nvar _wp$element = wp.element,\n    useState = _wp$element.useState,\n    useEffect = _wp$element.useEffect,\n    Fragment = _wp$element.Fragment;\nvar Button = wp.components.Button;\n\n\n//import { Slider }  from \"../react-slick.min.js\";\n\n\nvar SectionBlockIcon = function SectionBlockIcon() {\n  return wp.element.createElement(\n    'svg',\n    { width: '20', height: '20', viewBox: '0 0 20 20', fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },\n    wp.element.createElement('path', { d: 'M20 2H0V5H20V2Z', fill: '#C4C4C4' }),\n    wp.element.createElement('path', { d: 'M20 15H0V18H20V15Z', fill: '#C4C4C4' }),\n    wp.element.createElement('path', { d: 'M5 7H1V13H5V7Z', fill: 'white', stroke: '#3498DB', 'stroke-width': '2' }),\n    wp.element.createElement('path', { d: 'M12 7H8V13H12V7Z', fill: 'white', stroke: '#3498DB', 'stroke-width': '2' }),\n    wp.element.createElement('path', { d: 'M19 7H15V13H19V7Z', fill: 'white', stroke: '#3498DB', 'stroke-width': '2' })\n  );\n};\n\n/*============================================================================*/\n/*                          Classik Slick Block Begin                         */\n/*============================================================================*/\n\nregisterBlockType('k-blocks-sclick-slider-classic/k-blocks', {\n  title: __('Slic Slider Classic'),\n  icon: SectionBlockIcon,\n  category: 'k-common-blocks',\n  //parent: [ 'core/post-content' ], // only root block\n  supports: { align: ['full'], anchor: true, html: false },\n  attributes: {\n    align: { type: 'string', default: '' },\n    valign: { type: 'string', default: 'center' },\n    className: { type: 'string', default: '' },\n    anchor: { type: 'string' },\n    /* data */\n    mediaID: { type: 'array', default: [] },\n    mediaURL: { type: 'array', default: [] },\n    mediaTHUMB: { type: 'array', default: [] },\n    mediaMEDIUM: { type: 'array', default: [] },\n    mediaLARGE: { type: 'array', default: [] },\n    mediaCAPTION: { type: 'array', default: [] },\n    mediaALT: { type: 'array', default: [] },\n    blockID: { type: 'string', default: '' },\n    /* options */\n    slidesToShow: { type: 'number', default: 3 },\n    slidesToScroll: { type: 'number', default: 1 },\n    arrows: { type: 'boolean', default: true },\n    dots: { type: 'boolean', default: false },\n    infinite: { type: 'boolean', default: false },\n    autoplay: { type: 'boolean', default: false },\n    centerMode: { type: 'boolean', default: false },\n    adaptiveHeight: { type: 'boolean', default: false },\n    variableWidth: { type: 'boolean', default: false },\n    fade: { type: 'boolean', default: false },\n    sliderImageSize: { type: 'string', default: 'LARGE' },\n    openInModal: { type: 'boolean', default: false },\n    modalImageSize: { type: 'string', default: 'FULL' },\n    showCaption: { type: 'boolean', default: false },\n    /* responsive */\n    responsiveSM: { type: 'boolean', default: false },\n    slidesToShowSM: { type: 'number', default: 1 },\n    slidesToScrollSM: { type: 'number', default: 1 },\n    responsiveMD: { type: 'boolean', default: false },\n    slidesToShowMD: { type: 'number', default: 1 },\n    slidesToScrollMD: { type: 'number', default: 1 },\n    responsiveLG: { type: 'boolean', default: false },\n    slidesToShowLG: { type: 'number', default: 1 },\n    slidesToScrollLG: { type: 'number', default: 1 },\n    responsiveXL: { type: 'boolean', default: false },\n    slidesToShowXL: { type: 'number', default: 1 },\n    slidesToScrollXL: { type: 'number', default: 1 },\n    /* controlls classes */\n    arrowsColorClass: { type: 'string', default: '' },\n    arrowsSizeClass: { type: 'string', default: '' },\n    arrowsPositionClass: { type: 'string', default: '' },\n    dotsColorClass: { type: 'string', default: '' },\n    dotsSizeClass: { type: 'string', default: '' },\n    dotsPositionClass: { type: 'string', default: 'arrows-inner' },\n    slidePadding: { type: 'number', default: 0 }\n  },\n\n  /*=============================================================================*/\n  /*                                    EDIT                                     */\n  /*=============================================================================*/\n\n  edit: function edit(props) {\n\n    if (props.attributes.blockID != props.clientId) props.setAttributes({ blockID: props.clientId });\n\n    var dynamicStyle = '\\n      .img-gallery-wrapper-' + props.attributes.blockID + ' .slick-slide {\\n        padding-left: ' + props.attributes.slidePadding / 2 + 'rem;\\n        padding-right: ' + props.attributes.slidePadding / 2 + 'rem;\\n      }\\n      .img-gallery-wrapper-' + props.attributes.blockID + ' .slick-slider {\\n        padding-left: ' + props.attributes.slidePadding / 2 + 'rem;\\n        padding-right: ' + props.attributes.slidePadding / 2 + 'rem;\\n      }\\n    ';\n\n    return wp.element.createElement(\n      'div',\n      { className: \"img-gallery-wrapper-\" + props.attributes.blockID + \" \" + props.attributes.className + \" \" + controlClasses(props) },\n      wp.element.createElement(_controls.Controls, { propsObject: props }),\n      props.attributes.mediaID == 0 && wp.element.createElement(\n        'div',\n        { className: 'components-placeholder is-large' },\n        wp.element.createElement(\n          'div',\n          { className: 'components-placeholder__label' },\n          ' ',\n          __('Slick Slider Gallery'),\n          ' '\n        ),\n        wp.element.createElement(\n          'div',\n          { className: 'components-placeholder__instructions' },\n          __('Select gallery items by pressing \"Edit Gallery\" button.')\n        )\n      ),\n      wp.element.createElement('div', {\n        className: props.attributes.arrows ? 'slick-arrows' : '',\n        id: \"img-gallery-\" + props.clientId, dangerouslySetInnerHTML: { __html: sliderInnerContent(props, true) }\n      }),\n      wp.element.createElement('style', { dangerouslySetInnerHTML: { __html: dynamicStyle } })\n    );\n  },\n\n\n  /*===========================================================================*/\n  /*                                   SAVE                                    */\n  /*===========================================================================*/\n\n  save: function save(props) {\n    var responsiveOptionsRaw = '';\n    if (props.attributes.responsiveSM) {\n      responsiveOptionsRaw += '\\n          {\\n            breakpoint: 576,\\n            settings: {\\n              slidesToShow: ' + props.attributes.slidesToShowSM + ',\\n              slidesToScroll: ' + props.attributes.slidesToScrollSM + ',\\n            }\\n          },';\n    }\n    if (props.attributes.responsiveMD) {\n      responsiveOptionsRaw += '\\n          {\\n            breakpoint: 768,\\n            settings: {\\n              slidesToShow: ' + props.attributes.slidesToShowMD + ',\\n              slidesToScroll: ' + props.attributes.slidesToScrollMD + ',\\n            }\\n          },';\n    }\n    if (props.attributes.responsiveLG) {\n      responsiveOptionsRaw += '\\n          {\\n            breakpoint: 960,\\n            settings: {\\n              slidesToShow: ' + props.attributes.slidesToShowLG + ',\\n              slidesToScroll: ' + props.attributes.slidesToScrollLG + ',\\n            }\\n          },';\n    }\n    if (props.attributes.responsiveXL) {\n      responsiveOptionsRaw += '\\n          {\\n            breakpoint: 1140,\\n            settings: {\\n              slidesToShow: ' + props.attributes.slidesToShowXL + ',\\n              slidesToScroll: ' + props.attributes.slidesToScrollXL + ',\\n            }\\n          },';\n    }\n    var frontEndScript = '\\n          jQuery(document).ready(function($) {\\n            jQuery(document).on(\\'click\\', \\'#img-gallery-' + props.attributes.blockID + ' [data-toggle=\"lightbox\"]\\', function(event) {\\n                event.preventDefault();\\n                jQuery(this).ekkoLightbox();\\n            });\\n            $(\\'#img-gallery-' + props.attributes.blockID + '\\').not(\\'.slick-initialized\\').slick({\\n              slidesToShow: ' + props.attributes.slidesToShow + ',\\n              slidesToScroll: ' + props.attributes.slidesToScroll + ',\\n              arrows: ' + props.attributes.arrows + ',\\n              dots: ' + props.attributes.dots + ',\\n              infinite: ' + props.attributes.infinite + ',\\n              autoplay: ' + props.attributes.autoplay + ',\\n              centerMode: ' + props.attributes.centerMode + ',\\n              adaptiveHeight: ' + props.attributes.adaptiveHeight + ',\\n              variableWidth: ' + props.attributes.variableWidth + ',\\n              fade: ' + props.attributes.fade + ',\\n              responsive: [\\n                ' + responsiveOptionsRaw + '\\n              ]\\n            });\\n          });\\n        ';\n\n    var dynamicStyle = '\\n          .img-gallery-wrapper-' + props.attributes.blockID + ' .slick-slide {\\n            padding-left: ' + props.attributes.slidePadding / 2 + 'rem;\\n            padding-right: ' + props.attributes.slidePadding / 2 + 'rem;\\n          }\\n          .img-gallery-wrapper-' + props.attributes.blockID + ' .slick-slider {\\n            padding-left: ' + props.attributes.slidePadding / 2 + 'rem;\\n            padding-right: ' + props.attributes.slidePadding / 2 + 'rem;\\n          }\\n        ';\n\n    return wp.element.createElement(\n      'div',\n      { className: \"img-gallery-wrapper-\" + props.attributes.blockID + \" \" + controlClasses(props) },\n      wp.element.createElement('div', {\n        className: props.attributes.arrows ? 'slick-arrows' : '',\n        id: \"img-gallery-\" + props.attributes.blockID, dangerouslySetInnerHTML: { __html: sliderInnerContent(props) }\n      }),\n      wp.element.createElement('script', { dangerouslySetInnerHTML: { __html: frontEndScript } }),\n      wp.element.createElement('style', { dangerouslySetInnerHTML: { __html: dynamicStyle } })\n    );\n  }\n});\n\n/*===========================================================================*/\n/*                            SLIDE CONTENT OUTPUT                           */\n/*===========================================================================*/\n\nfunction sliderInnerContent(props) {\n  var edit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var output = '';\n  for (var i = 0; i < props.attributes.mediaID.length; i++) {\n    output += '<div><figure class=\"k-block-slick-classic-item ' + (props.attributes.showCaption ? 'with-caption' : 'no-caption') + '\">';\n    var imgUrl = props.attributes.mediaTHUMB[i];\n    switch (props.attributes.sliderImageSize) {\n      case 'FULL':\n        imgUrl = props.attributes.mediaURL[i];break;\n      case 'MEDIUM':\n        imgUrl = props.attributes.mediaMEDIUM[i];break;\n      case 'LARGE':\n        imgUrl = props.attributes.mediaLARGE[i];break;\n    }\n    if (props.attributes.openInModal && !edit) {\n      var imgModalUrl = props.attributes.mediaURL[i];\n      switch (props.attributes.modalImageSize) {\n        case 'THUMB':\n          imgModalUrl = props.attributes.mediaTHUMB[i];break;\n        case 'MEDIUM':\n          imgModalUrl = props.attributes.mediaMEDIUM[i];break;\n        case 'LARGE':\n          imgModalUrl = props.attributes.mediaLARGE[i];break;\n      }\n      output += '<a href=\"' + imgModalUrl + '\" data-toggle=\"lightbox\" data-gallery=\"k-block-slider-gallery\">';\n    }\n    output += '<img class=\"k-block-slick-classic-image\" src=\"' + imgUrl + '\" alt=\"' + props.attributes.mediaALT[i] + '\">';\n    if (props.attributes.mediaCAPTION[i] && props.attributes.showCaption) {\n      output += '<figcaption class=\"k-block-slick-classic-caption\">' + props.attributes.mediaCAPTION[i] + '</figcaption>';\n    }\n    if (props.attributes.openInModal && !edit) {\n      output += '</a>';\n    }\n    output += '</figure></div>';\n  }\n  return output;\n}\n\nfunction controlClasses(props) {\n  var att = props.attributes;\n  var allClasses = [att.arrowsColorClass, att.arrowsSizeClass, att.arrowsPositionClass, att.dotsColorClass, att.dotsSizeClass, att.dotsPositionClass];\n  return allClasses.filter(function (e) {\n    return e !== '';\n  }).join(' ');\n}\n//# sourceMappingURL=block.js.map\n\n//# sourceURL=webpack:///./source/slick-slider-classic/block.js?");

/***/ }),

/***/ "./source/slick-slider-classic/controls.js":
/*!*************************************************!*\
  !*** ./source/slick-slider-classic/controls.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /** @jsx wp.element.createElement */\n\nexports.Controls = Controls;\n\nvar _PannelUltimateBgControl = __webpack_require__(/*! ../common/PannelUltimateBgControl.js */ \"./source/common/PannelUltimateBgControl.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Controls(args) {\n\n  /* definitions */\n\n  var props = args.propsObject;\n\n  var __ = wp.i18n.__;\n  var _wp$blockEditor = wp.blockEditor,\n      MediaUpload = _wp$blockEditor.MediaUpload,\n      MediaUploadCheck = _wp$blockEditor.MediaUploadCheck,\n      MediaPlaceholder = _wp$blockEditor.MediaPlaceholder,\n      MediaReplaceFlow = _wp$blockEditor.MediaReplaceFlow;\n  var _wp$blockEditor2 = wp.blockEditor,\n      BlockVerticalAlignmentToolbar = _wp$blockEditor2.BlockVerticalAlignmentToolbar,\n      BlockControls = _wp$blockEditor2.BlockControls,\n      InspectorControls = _wp$blockEditor2.InspectorControls,\n      AlignmentToolbar = _wp$blockEditor2.AlignmentToolbar;\n  var _wp$components = wp.components,\n      Button = _wp$components.Button,\n      ToolbarGroup = _wp$components.ToolbarGroup,\n      Toolbar = _wp$components.Toolbar,\n      ToolbarButton = _wp$components.ToolbarButton,\n      Dashicon = _wp$components.Dashicon,\n      SVG = _wp$components.SVG,\n      Path = _wp$components.Path,\n      PanelBody = _wp$components.PanelBody,\n      PanelRow = _wp$components.PanelRow,\n      SelectControl = _wp$components.SelectControl,\n      RangeControl = _wp$components.RangeControl,\n      ToggleControl = _wp$components.ToggleControl,\n      Dropdown = _wp$components.Dropdown,\n      CheckboxControl = _wp$components.CheckboxControl,\n      FlexItem = _wp$components.FlexItem,\n      Flex = _wp$components.Flex,\n      ColorIndicator = _wp$components.ColorIndicator,\n      ButtonGroup = _wp$components.ButtonGroup;\n  var _wp$element = wp.element,\n      useState = _wp$element.useState,\n      useEffect = _wp$element.useEffect,\n      Fragment = _wp$element.Fragment;\n\n  /* functions */\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      prevent_start = _useState2[0],\n      set_prevent_start = _useState2[1];\n\n  function stop() {\n    jQuery(\"#img-gallery-\" + props.clientId).slick('unslick');\n  }\n  function start() {\n    var responsiveOptions = [];\n    if (props.attributes.responsiveSM) responsiveOptions.push({\n      breakpoint: 576, settings: { slidesToShow: props.attributes.slidesToShowSM, slidesToScroll: props.attributes.slidesToScrollSM }\n    });\n    if (props.attributes.responsiveMD) responsiveOptions.push({\n      breakpoint: 768, settings: { slidesToShow: props.attributes.slidesToShowMD, slidesToScroll: props.attributes.slidesToScrollMD }\n    });\n    if (props.attributes.responsiveLG) responsiveOptions.push({\n      breakpoint: 960, settings: { slidesToShow: props.attributes.slidesToShowLG, slidesToScroll: props.attributes.slidesToScrollLG }\n    });\n    if (props.attributes.responsiveXL) responsiveOptions.push({\n      breakpoint: 1140, settings: { slidesToShow: props.attributes.slidesToShowXL, slidesToScroll: props.attributes.slidesToScrollXL }\n    });\n    jQuery(\"#img-gallery-\" + props.clientId).not('.slick-initialized').slick({\n      slidesToShow: props.attributes.slidesToShow,\n      slidesToScroll: props.attributes.slidesToScroll,\n      arrows: props.attributes.arrows,\n      dots: props.attributes.dots,\n      infinite: props.attributes.infinite,\n      autoplay: props.attributes.autoplay,\n      centerMode: props.attributes.centerMode,\n      adaptiveHeight: props.attributes.adaptiveHeight,\n      variableWidth: props.attributes.variableWidth,\n      fade: props.attributes.fade,\n      responsive: responsiveOptions\n    });\n    jQuery(document).on('click', '#img-gallery-' + props.clientId + ' [data-toggle=\"lightbox\"]', function (event) {\n      event.preventDefault();\n      jQuery(this).ekkoLightbox();\n    });\n  }\n  useEffect(function () {\n    if (prevent_start != true) start();\n  });\n\n  function mediaReplace(newcontent) {\n    set_prevent_start(true);\n    var ids = [],\n        urls = [],\n        thumbs = [],\n        mds = [],\n        lgs = [],\n        captions = [],\n        alts = [];\n    stop();\n    newcontent.forEach(function (newcontentItem) {\n      ids.push(newcontentItem.id);\n      urls.push(newcontentItem.url);\n      captions.push(newcontentItem.caption);\n      if (newcontentItem.sizes.hasOwnProperty('thumbnail')) {\n        thumbs.push(newcontentItem.sizes.thumbnail.url);\n      } else {\n        thumbs.push(newcontentItem.url);\n      }\n      if (newcontentItem.sizes.hasOwnProperty('medium')) {\n        mds.push(newcontentItem.sizes.medium.url);\n      } else {\n        mds.push(newcontentItem.url);\n      }\n      if (newcontentItem.sizes.hasOwnProperty('large')) {\n        lgs.push(newcontentItem.sizes.large.url);\n      } else {\n        lgs.push(newcontentItem.url);\n      }\n      alts.push(newcontentItem.alt);\n    });\n    props.setAttributes({\n      mediaID: ids,\n      mediaURL: urls,\n      mediaTHUMB: thumbs,\n      mediaMEDIUM: mds,\n      mediaLARGE: lgs,\n      mediaCAPTION: captions,\n      mediaALT: alts\n    });\n    set_prevent_start(false);\n  }\n\n  function safelySetAttribute(attribute, newcontent) {\n    set_prevent_start(true);\n    stop();\n    props.setAttributes(_defineProperty({}, attribute, newcontent));\n    set_prevent_start(false);\n  }\n\n  /* output controls */\n\n  return wp.element.createElement(\n    Fragment,\n    null,\n    wp.element.createElement(\n      BlockControls,\n      null,\n      wp.element.createElement(\n        ToolbarGroup,\n        null,\n        wp.element.createElement(MediaUpload, {\n          multiple: 'add',\n          gallery: true,\n          value: props.attributes.mediaID,\n          onSelect: mediaReplace,\n          render: function render(_ref) {\n            var open = _ref.open;\n            return wp.element.createElement(\n              Button,\n              { className: 'components-button components-toolbar-button', onClick: open },\n              ' Edit Gallery '\n            );\n          }\n        })\n      )\n    ),\n    wp.element.createElement(\n      InspectorControls,\n      null,\n      wp.element.createElement(\n        PanelBody,\n        { title: __('Style options'), initialOpen: false },\n        wp.element.createElement(SelectControl, {\n          label: 'Slider image size',\n          options: [{ label: 'Thumbnail', value: 'THUMB' }, { label: 'Medium', value: 'MEDIUM' }, { label: 'Large', value: 'LARGE' }, { label: 'Full size', value: 'FULL' }],\n          value: props.attributes.sliderImageSize,\n          onChange: function onChange(newcontent) {\n            return safelySetAttribute('sliderImageSize', newcontent);\n          }\n        }),\n        props.attributes.openInModal && wp.element.createElement(SelectControl, {\n          label: 'Modal image size',\n          options: [{ label: 'Thumbnail', value: 'THUMB' }, { label: 'Medium', value: 'MEDIUM' }, { label: 'Large', value: 'LARGE' }, { label: 'Full size', value: 'FULL' }],\n          value: props.attributes.modalImageSize,\n          onChange: function onChange(newcontent) {\n            return safelySetAttribute('modalImageSize', newcontent);\n          }\n        }),\n        wp.element.createElement(ToggleControl, {\n          label: __('Show caption'),\n          checked: props.attributes.showCaption,\n          onChange: function onChange() {\n            return safelySetAttribute('showCaption', !props.attributes.showCaption);\n          }\n        }),\n        wp.element.createElement(RangeControl, {\n          value: props.attributes.slidePadding,\n          onChange: function onChange(newvalue) {\n            return safelySetAttribute('slidePadding', newvalue);\n          },\n          min: 0,\n          max: 5,\n          step: '0.1',\n          label: __('Margin beetweeen slides (0.1Rem)')\n        })\n      ),\n      wp.element.createElement(\n        PanelBody,\n        { title: __('Default full screen options') },\n        wp.element.createElement(RangeControl, {\n          beforeIcon: 'columns',\n          label: __('Slides to show'),\n          value: props.attributes.slidesToShow,\n          onChange: function onChange(newcontent) {\n            return safelySetAttribute('slidesToShow', newcontent);\n          },\n          min: 1,\n          max: 10\n        }),\n        wp.element.createElement(RangeControl, {\n          beforeIcon: 'share-alt2',\n          label: __('Slides to scroll'),\n          value: props.attributes.slidesToScroll,\n          onChange: function onChange(newcontent) {\n            return safelySetAttribute('slidesToScroll', newcontent);\n          },\n          min: 1,\n          max: 10\n        }),\n        wp.element.createElement(ToggleControl, {\n          label: __('Arrows'),\n          checked: props.attributes.arrows,\n          onChange: function onChange() {\n            return safelySetAttribute('arrows', !props.attributes.arrows);\n          }\n        }),\n        wp.element.createElement(ToggleControl, {\n          label: __('Dots'),\n          checked: props.attributes.dots,\n          onChange: function onChange() {\n            return safelySetAttribute('dots', !props.attributes.dots);\n          }\n        }),\n        wp.element.createElement(ToggleControl, {\n          label: __('Infinite'),\n          checked: props.attributes.infinite,\n          onChange: function onChange() {\n            return safelySetAttribute('infinite', !props.attributes.infinite);\n          }\n        }),\n        wp.element.createElement(ToggleControl, {\n          label: __('Autoplay'),\n          checked: props.attributes.autoplay,\n          onChange: function onChange() {\n            return safelySetAttribute('autoplay', !props.attributes.autoplay);\n          }\n        }),\n        wp.element.createElement(ToggleControl, {\n          label: __('Center Mode'),\n          checked: props.attributes.centerMode,\n          onChange: function onChange() {\n            return safelySetAttribute('centerMode', !props.attributes.centerMode);\n          }\n        }),\n        wp.element.createElement(ToggleControl, {\n          label: __('Adaptive Height'),\n          checked: props.attributes.adaptiveHeight,\n          onChange: function onChange() {\n            return safelySetAttribute('adaptiveHeight', !props.attributes.adaptiveHeight);\n          }\n        }),\n        wp.element.createElement(ToggleControl, {\n          label: __('Variable Width'),\n          checked: props.attributes.variableWidth,\n          onChange: function onChange() {\n            return safelySetAttribute('variableWidth', !props.attributes.variableWidth);\n          }\n        }),\n        wp.element.createElement(ToggleControl, {\n          label: __('Fade'),\n          checked: props.attributes.fade,\n          onChange: function onChange() {\n            return safelySetAttribute('fade', !props.attributes.fade);\n          }\n        })\n      ),\n      wp.element.createElement(\n        PanelBody,\n        { title: __('Control style options'), initialOpen: false },\n        props.attributes.arrows && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '1rem', 'marginTop': '0.5rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: 'css-wdf2ti-Wrapper' },\n              wp.element.createElement(\n                'label',\n                { className: 'k-sliderlabel' },\n                'Arrows Color',\n                wp.element.createElement(ColorIndicator, { colorValue: props.attributes.arrowsColorClass ? \"#ffffff\" : \"#1e1e1e\" })\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(\n                ButtonGroup,\n                null,\n                wp.element.createElement(\n                  Button,\n                  { isSmall: true, className: props.attributes.arrowsColorClass == '' ? 'is-primary' : '', onClick: function onClick() {\n                      return props.setAttributes({ arrowsColorClass: \"\" });\n                    } },\n                  'Dark'\n                ),\n                wp.element.createElement(\n                  Button,\n                  { isSmall: true, className: props.attributes.arrowsColorClass == 'light-arrows' ? 'is-primary' : '', onClick: function onClick() {\n                      return props.setAttributes({ arrowsColorClass: \"light-arrows\" });\n                    } },\n                  'Light'\n                )\n              )\n            )\n          ),\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '0.5rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: 'css-wdf2ti-Wrapper' },\n              wp.element.createElement(\n                'label',\n                null,\n                'Arrow Size'\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(SelectControl, {\n                value: props.attributes.arrowsSizeClass,\n                options: [{ label: 'Big', value: 'big-arrows' }, { label: 'Medium', value: '' }, { label: 'Small', value: 'small-arrows' }],\n                onChange: function onChange(size) {\n                  return props.setAttributes({ arrowsSizeClass: size });\n                }\n              })\n            )\n          ),\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '2rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: 'css-wdf2ti-Wrapper' },\n              wp.element.createElement(\n                'label',\n                null,\n                'Arrow Position'\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(SelectControl, {\n                value: props.attributes.arrowsPositionClass,\n                options: [{ label: 'Outside', value: 'arrows-outer' }, { label: 'Inside', value: 'arrows-inner' }, { label: 'Bottom', value: 'arrows-bottom' }],\n                onChange: function onChange(pos) {\n                  return props.setAttributes({ arrowsPositionClass: pos });\n                }\n              })\n            )\n          )\n        ),\n        props.attributes.dots && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '1rem', 'marginTop': '0.5rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: 'css-wdf2ti-Wrapper' },\n              wp.element.createElement(\n                'label',\n                { className: 'k-sliderlabel' },\n                'Dots Color',\n                wp.element.createElement(ColorIndicator, { colorValue: props.attributes.dotsColorClass ? \"#ffffff\" : \"#1e1e1e\" })\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(\n                ButtonGroup,\n                null,\n                wp.element.createElement(\n                  Button,\n                  { isSmall: true, className: props.attributes.dotsColorClass == '' ? 'is-primary' : '', onClick: function onClick() {\n                      return props.setAttributes({ dotsColorClass: \"\" });\n                    } },\n                  'Dark'\n                ),\n                wp.element.createElement(\n                  Button,\n                  { isSmall: true, className: props.attributes.dotsColorClass == 'light-dots' ? 'is-primary' : '', onClick: function onClick() {\n                      return props.setAttributes({ dotsColorClass: \"light-dots\" });\n                    } },\n                  'Light'\n                )\n              )\n            )\n          ),\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '0.5rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: 'css-wdf2ti-Wrapper' },\n              wp.element.createElement(\n                'label',\n                null,\n                'Dots Size'\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(SelectControl, {\n                value: props.attributes.dotsSizeClass,\n                options: [{ label: 'Big', value: 'big-dots' }, { label: 'Medium', value: '' }, { label: 'Small', value: 'small-dots' }],\n                onChange: function onChange(size) {\n                  return props.setAttributes({ dotsSizeClass: size });\n                }\n              })\n            )\n          ),\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '2rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: 'css-wdf2ti-Wrapper' },\n              wp.element.createElement(\n                'label',\n                null,\n                'Dots Position'\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(SelectControl, {\n                value: props.attributes.dotsPositionClass,\n                options: [{ label: 'Outer', value: '' }, { label: 'Inner', value: 'dots-inner' }],\n                onChange: function onChange(pos) {\n                  return props.setAttributes({ dotsPositionClass: pos });\n                }\n              })\n            )\n          )\n        )\n      ),\n      wp.element.createElement(\n        PanelBody,\n        { title: __('Responsive options'), initialOpen: false },\n        wp.element.createElement(CheckboxControl, {\n          label: __('Add breakpoint' + ' SM'),\n          checked: props.attributes.responsiveSM,\n          onChange: function onChange() {\n            return safelySetAttribute('responsiveSM', !props.attributes.responsiveSM);\n          }\n        }),\n        props.attributes.responsiveSM && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(RangeControl, {\n            beforeIcon: 'columns',\n            label: __('Slides to show'),\n            value: props.attributes.slidesToShowSM,\n            onChange: function onChange(newcontent) {\n              return safelySetAttribute('slidesToShowSM', newcontent);\n            },\n            min: 1,\n            max: 10\n          }),\n          wp.element.createElement(RangeControl, {\n            beforeIcon: 'share-alt2',\n            label: __('Slides to scroll'),\n            value: props.attributes.slidesToScrollSM,\n            onChange: function onChange(newcontent) {\n              return safelySetAttribute('slidesToScrollSM', newcontent);\n            },\n            min: 1,\n            max: 10\n          })\n        ),\n        wp.element.createElement(CheckboxControl, {\n          label: __('Add breakpoint' + ' MD'),\n          checked: props.attributes.responsiveMD,\n          onChange: function onChange() {\n            return safelySetAttribute('responsiveMD', !props.attributes.responsiveMD);\n          }\n        }),\n        props.attributes.responsiveMD && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(RangeControl, {\n            beforeIcon: 'columns',\n            label: __('Slides to show'),\n            value: props.attributes.slidesToShowMD,\n            onChange: function onChange(newcontent) {\n              return safelySetAttribute('slidesToShowMD', newcontent);\n            },\n            min: 1,\n            max: 10\n          }),\n          wp.element.createElement(RangeControl, {\n            beforeIcon: 'share-alt2',\n            label: __('Slides to scroll'),\n            value: props.attributes.slidesToScrollMD,\n            onChange: function onChange(newcontent) {\n              return safelySetAttribute('slidesToScrollMD', newcontent);\n            },\n            min: 1,\n            max: 10\n          })\n        ),\n        wp.element.createElement(CheckboxControl, {\n          label: __('Add breakpoint' + ' LG'),\n          checked: props.attributes.responsiveLG,\n          onChange: function onChange() {\n            return safelySetAttribute('responsiveLG', !props.attributes.responsiveLG);\n          }\n        }),\n        props.attributes.responsiveLG && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(RangeControl, {\n            beforeIcon: 'columns',\n            label: __('Slides to show'),\n            value: props.attributes.slidesToShowLG,\n            onChange: function onChange(newcontent) {\n              return safelySetAttribute('slidesToShowLG', newcontent);\n            },\n            min: 1,\n            max: 10\n          }),\n          wp.element.createElement(RangeControl, {\n            beforeIcon: 'share-alt2',\n            label: __('Slides to scroll'),\n            value: props.attributes.slidesToScrollLG,\n            onChange: function onChange(newcontent) {\n              return safelySetAttribute('slidesToScrollLG', newcontent);\n            },\n            min: 1,\n            max: 10\n          })\n        ),\n        wp.element.createElement(CheckboxControl, {\n          label: __('Add breakpoint' + ' XL'),\n          checked: props.attributes.responsiveXL,\n          onChange: function onChange() {\n            return safelySetAttribute('responsiveXL', !props.attributes.responsiveXL);\n          }\n        }),\n        props.attributes.responsiveXL && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(RangeControl, {\n            beforeIcon: 'columns',\n            label: __('Slides to show'),\n            value: props.attributes.slidesToShowXL,\n            onChange: function onChange(newcontent) {\n              return safelySetAttribute('slidesToShowXL', newcontent);\n            },\n            min: 1,\n            max: 10\n          }),\n          wp.element.createElement(RangeControl, {\n            beforeIcon: 'share-alt2',\n            label: __('Slides to scroll'),\n            value: props.attributes.slidesToScrollXL,\n            onChange: function onChange(newcontent) {\n              return safelySetAttribute('slidesToScrollXL', newcontent);\n            },\n            min: 1,\n            max: 10\n          })\n        )\n      )\n    )\n  );\n}\n//# sourceMappingURL=controls.js.map\n\n//# sourceURL=webpack:///./source/slick-slider-classic/controls.js?");

/***/ }),

/***/ "./source/slick-slider-html/block.js":
/*!*******************************************!*\
  !*** ./source/slick-slider-html/block.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _commonFunctions = __webpack_require__(/*! ../common/common-functions.js */ \"./source/common/common-functions.js\");\n\nvar _PannelUltimateBgControl = __webpack_require__(/*! ../common/PannelUltimateBgControl.js */ \"./source/common/PannelUltimateBgControl.js\");\n\nvar _controlsParent = __webpack_require__(/*! ./controls-parent.js */ \"./source/slick-slider-html/controls-parent.js\");\n\nvar _controlsChild = __webpack_require__(/*! ./controls-child.js */ \"./source/slick-slider-html/controls-child.js\");\n\n/** @jsx wp.element.createElement */\n\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar InnerBlocks = wp.blockEditor.InnerBlocks;\nvar _wp = wp,\n    serverSideRender = _wp.serverSideRender;\nvar _wp$blockEditor = wp.blockEditor,\n    BlockVerticalAlignmentToolbar = _wp$blockEditor.BlockVerticalAlignmentToolbar,\n    BlockControls = _wp$blockEditor.BlockControls,\n    InspectorControls = _wp$blockEditor.InspectorControls,\n    AlignmentToolbar = _wp$blockEditor.AlignmentToolbar;\nvar _wp$components = wp.components,\n    Button = _wp$components.Button,\n    ToolbarGroup = _wp$components.ToolbarGroup,\n    Toolbar = _wp$components.Toolbar,\n    ToolbarButton = _wp$components.ToolbarButton,\n    Dashicon = _wp$components.Dashicon,\n    SVG = _wp$components.SVG,\n    Path = _wp$components.Path,\n    PanelBody = _wp$components.PanelBody,\n    PanelRow = _wp$components.PanelRow,\n    SelectControl = _wp$components.SelectControl,\n    Placeholder = _wp$components.Placeholder,\n    IsolatedEventContainer = _wp$components.IsolatedEventContainer;\nvar _wp$element = wp.element,\n    useState = _wp$element.useState,\n    useEffect = _wp$element.useEffect,\n    Fragment = _wp$element.Fragment;\nvar useSelect = wp.data.useSelect;\n\n\nvar BlockIcon = function BlockIcon() {\n  return wp.element.createElement(\n    'svg',\n    { width: '20', height: '20', viewBox: '0 0 20 20', fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },\n    wp.element.createElement('path', { d: 'M7 6H1V12H7V6Z', fill: 'white', stroke: '#3498DB', 'stroke-width': '2' }),\n    wp.element.createElement('path', { d: 'M20 5H9V7H20V5Z', fill: '#C4C4C4' }),\n    wp.element.createElement('path', { d: 'M20 11H9V13H20V11Z', fill: '#C4C4C4' }),\n    wp.element.createElement('path', { d: 'M20 8H9V10H20V8Z', fill: '#C4C4C4' }),\n    wp.element.createElement('path', { d: 'M14 16L11 17.7321V14.2679L14 16Z', fill: '#1E1E1E' }),\n    wp.element.createElement('path', { d: 'M6 16L9 14.2679V17.7321L6 16Z', fill: '#1E1E1E' })\n  );\n};\nvar ChildBlockIcon = function ChildBlockIcon() {\n  return wp.element.createElement(\n    'svg',\n    { width: '20', height: '20', viewBox: '0 0 20 20', fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },\n    wp.element.createElement('path', { d: 'M19 3H1V17H19V3Z', fill: 'white', stroke: '#3498DB', 'stroke-width': '2' }),\n    wp.element.createElement('path', { d: 'M13 12H7V14H13V12Z', fill: '#C4C4C4' }),\n    wp.element.createElement('path', { d: 'M14 6H6V8H14V6Z', fill: '#C4C4C4' }),\n    wp.element.createElement('path', { d: 'M16 9H4V11H16V9Z', fill: '#C4C4C4' })\n  );\n};\n\n/*============================================================================*/\n/*                              PARENTBLOCK BEGIN                             */\n/*============================================================================*/\n\nvar withCustomClassName = wp.compose.createHigherOrderComponent(function (BlockListBlock) {\n  return function (props) {\n    if (props.name !== 'k-blocks-slick-html-child/k-blocks') {\n      return wp.element.createElement(BlockListBlock, props);\n    }\n    return wp.element.createElement(\n      'div',\n      { 'class': 'k-blocks-slick-html-slide-content d-block' },\n      wp.element.createElement(BlockListBlock, _extends({}, props, { className: \"d-block\" }))\n    );\n  };\n}, 'withClientIdClassName');\nwp.hooks.addFilter('editor.BlockListBlock', 'example/filter-blocks', withCustomClassName);\n\nregisterBlockType('k-blocks-slick-html-parent/k-blocks', {\n  title: __('HTML Slick Slider'),\n  icon: BlockIcon,\n  category: 'k-common-blocks',\n  //parent: [ 'core/post-content' ], // only root block\n  supports: { anchor: true, html: false },\n  attributes: {\n    className: { type: 'string', default: '' },\n    anchor: { type: 'string' },\n    blockID: { type: 'string', default: '' },\n    minHeight: { type: 'integer', default: 7 },\n    /* slider */\n    slidesToShow: { type: 'integer', default: 1 },\n    slidesToScroll: { type: 'integer', default: 1 },\n    arrows: { type: 'boolean', default: true },\n    dots: { type: 'boolean', default: false },\n    infinite: { type: 'boolean', default: false },\n    autoplay: { type: 'boolean', default: false },\n    fade: { type: 'boolean', default: false },\n    pauseOnHover: { type: 'boolean', default: false },\n    arrowsColorClass: { type: 'string', default: '' },\n    arrowsSizeClass: { type: 'string', default: '' },\n    arrowsPositionClass: { type: 'string', default: '' },\n    dotsColorClass: { type: 'string', default: '' },\n    dotsSizeClass: { type: 'string', default: '' },\n    dotsPositionClass: { type: 'string', default: 'arrows-inner' },\n    centerMode: { type: 'boolean', default: false },\n    adaptiveHeight: { type: 'boolean', default: false },\n    variableWidth: { type: 'boolean', default: false },\n    /* responsive */\n    responsiveSM: { type: 'boolean', default: false },\n    slidesToShowSM: { type: 'number', default: 1 },\n    slidesToScrollSM: { type: 'number', default: 1 },\n    responsiveMD: { type: 'boolean', default: false },\n    slidesToShowMD: { type: 'number', default: 1 },\n    slidesToScrollMD: { type: 'number', default: 1 },\n    responsiveLG: { type: 'boolean', default: false },\n    slidesToShowLG: { type: 'number', default: 1 },\n    slidesToScrollLG: { type: 'number', default: 1 },\n    responsiveXL: { type: 'boolean', default: false },\n    slidesToShowXL: { type: 'number', default: 1 },\n    slidesToScrollXL: { type: 'number', default: 1 }\n  },\n\n  /*=============================================================================*/\n  /*                                    EDIT                                     */\n  /*=============================================================================*/\n\n  edit: function edit(props) {\n\n    var att = props.attributes;\n\n    var _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        editMode = _useState2[0],\n        setEditMode = _useState2[1];\n\n    var innerBlockCount = useSelect(function (select) {\n      return select('core/block-editor').getBlocks(props.clientId).length;\n    }, [props.clientId]);\n    if (props.attributes.blockID != props.clientId) props.setAttributes({ blockID: props.clientId });\n    props.editMode = editMode;\n    props.toggleEditMode = function () {\n      setEditMode(!editMode);\n    };\n    props.setEditMode = function (par) {\n      setEditMode(par);\n    };\n\n    var allInnerBlocks = wp.data.select('core/block-editor').getBlocks(props.clientId);\n    var sliderHtml = \"\";\n    allInnerBlocks.forEach(function (el) {\n      return sliderHtml += wp.blocks.getBlockContent(el);\n    });\n\n    var styleHtml = '\\n      #html-gallery-' + att.blockID + ' .k-blocks-slick-html-slide .k-blocks-slick-html-inner-content.row,\\n      .slider-edit-' + att.blockID + ' .k-blocks-slick-html-slide>div>.k-bs-grid>.block-editor-inner-blocks>.block-editor-block-list__layout,\\n      .slider-edit-' + att.blockID + ' .k-blocks-slick-html-slide>.k-bs-grid>.block-editor-inner-blocks>.block-editor-block-list__layout {\\n        min-height: ' + att.minHeight + 'rem;\\n      }\\n    ';\n\n    var styleHtmlEdit = '\\n      .slider-edit-' + att.blockID + '>div>.block-editor-block-list__layout {\\n      \\tdisplay: flex;\\n        flex-wrap: wrap;\\n        justify-content: space-around;\\n      }\\n      .slider-edit-' + att.blockID + '>div>div>.k-blocks-slick-html-slide-content.d-block {\\n        flex: 0 0 calc( 95% / ' + att.slidesToShow + ' );\\n        max-width: calc( 95% / ' + att.slidesToShow + ' );\\n      }\\n      .slider-edit-' + att.blockID + '>div>div>.block-list-appender.wp-block { width: 95%; }\\n    ';\n\n    return wp.element.createElement(\n      Fragment,\n      null,\n      wp.element.createElement(_controlsParent.ControlsSetParent, { propsObject: props }),\n      wp.element.createElement(\n        'div',\n        { className: \"k-blocks-slick-html-parent backend \" + att.className + \" \" + (editMode ? \"editmode\" : \"viewmode\") + \" \" + controlClasses(props) },\n        !innerBlockCount && wp.element.createElement(Placeholder, {\n          icon: BlockIcon,\n          className: editMode ? \"slick-placeholder-edit\" : \"\",\n          label: 'Add new slide',\n          style: { minHeight: att.minHeight + 'Rem' }\n        }),\n        editMode && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(\n            'div',\n            { className: \"slider-edit-\" + att.blockID },\n            wp.element.createElement(InnerBlocks, {\n              allowedBlocks: ['k-blocks-slick-html-child/k-blocks'],\n              orientation: att.slidesToShow != 1 ? \"horizontal\" : \"vertiсal\" // horizontal/vertiсal\n              , renderAppender: editMode ? function () {\n                return wp.element.createElement(InnerBlocks.ButtonBlockAppender, null);\n              } : false\n            })\n          ),\n          wp.element.createElement('style', { dangerouslySetInnerHTML: { __html: styleHtml } }),\n          wp.element.createElement('style', { dangerouslySetInnerHTML: { __html: styleHtmlEdit } })\n        ),\n        !editMode && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement('div', {\n            className: \"hero-gallery\",\n            id: \"html-gallery-\" + att.blockID,\n            dangerouslySetInnerHTML: { __html: sliderHtml }\n          }),\n          wp.element.createElement('style', { dangerouslySetInnerHTML: { __html: styleHtml } })\n        )\n      )\n    );\n  },\n\n\n  /*===========================================================================*/\n  /*                                   SAVE                                    */\n  /*===========================================================================*/\n\n  save: function save(props) {\n\n    var att = props.attributes;\n\n    var responsiveOptionsRaw = '';\n    if (props.attributes.responsiveSM) {\n      responsiveOptionsRaw += '\\n      {\\n        breakpoint: 576,\\n        settings: {\\n          slidesToShow: ' + props.attributes.slidesToShowSM + ',\\n          slidesToScroll: ' + props.attributes.slidesToScrollSM + ',\\n        }\\n      },';\n    }\n    if (props.attributes.responsiveMD) {\n      responsiveOptionsRaw += '\\n      {\\n        breakpoint: 768,\\n        settings: {\\n          slidesToShow: ' + props.attributes.slidesToShowMD + ',\\n          slidesToScroll: ' + props.attributes.slidesToScrollMD + ',\\n        }\\n      },';\n    }\n    if (props.attributes.responsiveLG) {\n      responsiveOptionsRaw += '\\n      {\\n        breakpoint: 960,\\n        settings: {\\n          slidesToShow: ' + props.attributes.slidesToShowLG + ',\\n          slidesToScroll: ' + props.attributes.slidesToScrollLG + ',\\n        }\\n      },';\n    }\n    if (props.attributes.responsiveXL) {\n      responsiveOptionsRaw += '\\n      {\\n        breakpoint: 1140,\\n        settings: {\\n          slidesToShow: ' + props.attributes.slidesToShowXL + ',\\n          slidesToScroll: ' + props.attributes.slidesToScrollXL + ',\\n        }\\n      },';\n    }\n\n    var frontEndScript = '\\n    jQuery(document).ready(function($) {\\n      $(\"#html-gallery-' + att.blockID + '\").slick({\\n        slidesToShow: ' + props.attributes.slidesToShow + ',\\n        slidesToScroll: ' + props.attributes.slidesToScroll + ',\\n        arrows: ' + props.attributes.arrows + ',\\n        dots: ' + props.attributes.dots + ',\\n        infinite: ' + props.attributes.infinite + ',\\n        autoplay: ' + props.attributes.autoplay + ',\\n        fade: ' + props.attributes.fade + ',\\n        pauseOnHover: ' + props.attributes.pauseOnHover + ',\\n        adaptiveHeight: true,\\n        responsive: [\\n          ' + responsiveOptionsRaw + '\\n        ]\\n      });\\n    });';\n\n    return wp.element.createElement(\n      'div',\n      { className: \"k-blocks-slick-html-parent html-gallery \" + controlClasses(props) },\n      wp.element.createElement(\n        'div',\n        { id: \"html-gallery-\" + att.blockID },\n        wp.element.createElement(InnerBlocks.Content, null)\n      ),\n      wp.element.createElement('script', { dangerouslySetInnerHTML: { __html: frontEndScript } }),\n      wp.element.createElement('style', { dangerouslySetInnerHTML: { __html: \"#html-gallery-\" + att.blockID + \" .k-blocks-slick-html-inner-content.row { min-height: \" + att.minHeight + \"rem }\" } })\n    );\n  }\n});\n\n/*============================================================================*/\n/*                             CHILD BLOCK BEGIN                              */\n/*============================================================================*/\n\nfunction addBlockClass(props) {\n  return props.attributes.className ? \" \" + props.attributes.className : \"\";\n};\nfunction addCenterClass(props) {\n  return props.attributes.halign ? \" \" + props.attributes.halign : \"\";\n};\nfunction addValignClass(props) {\n  return props.attributes.valign ? \" \" + props.attributes.valign : \"\";\n};\nvar ConditionalWrapper = function ConditionalWrapper(_ref) {\n  var condition = _ref.condition,\n      wrapper = _ref.wrapper,\n      children = _ref.children;\n  return condition ? wrapper(children) : children;\n};\n\nregisterBlockType('k-blocks-slick-html-child/k-blocks', {\n  title: __('Slide'),\n  icon: ChildBlockIcon,\n  category: 'k-common-blocks',\n  parent: ['k-blocks-slick-html-parent'],\n  supports: { html: false, className: true, anchor: true },\n  attributes: {\n    className: { type: 'string', default: '' },\n    anchor: { type: 'string', default: '' },\n    /* positioning */\n    minHeight: { type: 'integer', default: 10 },\n    halign: { type: 'boolean', default: 'justify-content-center' },\n    valign: { type: 'string', default: 'align-items-center' },\n    noGutters: { type: 'boolean', default: true },\n    isSectionWide: { type: 'boolean', default: true },\n    /* color */\n    color: { type: 'string', default: 'inherit' },\n    bgColor: { type: 'string', default: 'transparent' },\n    bgGradient: { type: 'string', default: false },\n    bgImage: { type: 'string' },\n    bgImageId: { type: 'integer', default: 0 },\n    bgImageType: { type: 'string', default: 'cover' },\n    bgImageFocal: { type: 'object', default: { x: '0.5', y: '0.5' } }\n  },\n\n  /*=============================================================================*/\n  /*                                    EDIT                                     */\n  /*=============================================================================*/\n\n  edit: function edit(props) {\n\n    var atts = props.attributes;\n    var innerBlockCount = useSelect(function (select) {\n      return select('core/block-editor').getBlocks(props.clientId).length;\n    }, [props.clientId]);\n\n    return wp.element.createElement(\n      Fragment,\n      null,\n      wp.element.createElement(_controlsChild.ControlsSetChild, { propsObject: props }),\n      wp.element.createElement(\n        'div',\n        {\n          className: \"k-blocks-slick-html-slide\",\n          style: {\n            color: atts.color,\n            backgroundColor: atts.bgColor,\n            backgroundImage: (atts.bgGradient ? atts.bgGradient : 'none') + ',' + (atts.bgImage ? \"url('\" + atts.bgImage + \"')\" : 'none'),\n            backgroundSize: atts.bgImageType == 'cover' ? 'auto, cover' : atts.bgImageType == 'cover' ? 'auto, contain' : 'auto, auto',\n            backgroundRepeat: atts.bgImageType != 'repeat' ? 'no-repeat,no-repeat' : 'no-repeat,repeat',\n            backgroundPosition: atts.bgImageType != 'repeat' ? 'center,' + atts.bgImageFocal.x * 100 + '% ' + atts.bgImageFocal.y * 100 + '%' : 'center,center'\n          }\n        },\n        wp.element.createElement(\n          'div',\n          { 'class': atts.isSectionWide ? \"k-bs-slider-block-no-container\" : \"k-bs-slider-block-container container\" },\n          wp.element.createElement(\n            'div',\n            { className: \"k-bs-grid g-0\" + addBlockClass(props) + \" grid-align-\" + props.attributes.valign + (props.attributes.halign ? \" has-\" + props.attributes.halign : \"\") },\n            wp.element.createElement(InnerBlocks, {\n              allowedBlocks: ['k-blocks-bs-grid-child/k-blocks'],\n              renderAppender: false,\n              orientation: 'horizontal'\n            })\n          )\n        )\n      )\n    );\n  },\n\n\n  /*===========================================================================*/\n  /*                                   SAVE                                    */\n  /*===========================================================================*/\n\n  save: function save(props) {\n\n    var atts = props.attributes;\n    var addClass = props.attributes.className ? \" \" + props.attributes.className : \"\";\n    var guttersClass = props.attributes.noGutters ? \" no-gutters\" : \"\";\n\n    return wp.element.createElement(\n      Fragment,\n      null,\n      wp.element.createElement(\n        'div',\n        {\n          className: \"k-blocks-slick-html-slide\" + addBlockClass(props),\n          style: {\n            color: atts.color,\n            backgroundColor: atts.bgColor,\n            backgroundImage: (atts.bgGradient ? atts.bgGradient : 'none') + ',' + (atts.bgImage ? \"url('\" + atts.bgImage + \"')\" : 'none'),\n            backgroundSize: atts.bgImageType == 'cover' ? 'auto, cover' : atts.bgImageType == 'cover' ? 'auto, contain' : 'auto, auto',\n            backgroundRepeat: atts.bgImageType != 'repeat' ? 'no-repeat,no-repeat' : 'no-repeat,repeat',\n            backgroundPosition: atts.bgImageType != 'repeat' ? 'center,' + atts.bgImageFocal.x * 100 + '% ' + atts.bgImageFocal.y * 100 + '%' : 'center,center'\n          }\n        },\n        wp.element.createElement(\n          ConditionalWrapper,\n          {\n            condition: !atts.isSectionWide,\n            wrapper: function wrapper(children) {\n              return wp.element.createElement(\n                'div',\n                { className: \"k-bs-slider-block-container container clearfix\" },\n                ' ',\n                children,\n                ' '\n              );\n            }\n          },\n          wp.element.createElement(\n            'div',\n            { className: \"k-blocks-slick-html-inner-content row g-0\" + addCenterClass(props) + addValignClass(props) },\n            wp.element.createElement(InnerBlocks.Content, null)\n          )\n        )\n      )\n    );\n  }\n});\n\nfunction controlClasses(props) {\n  var att = props.attributes;\n  var allClasses = [att.arrowsColorClass, att.arrowsSizeClass, att.arrowsPositionClass, att.dotsColorClass, att.dotsSizeClass, att.dotsPositionClass];\n  return allClasses.filter(function (e) {\n    return e !== '';\n  }).join(' ');\n}\n//# sourceMappingURL=block.js.map\n\n//# sourceURL=webpack:///./source/slick-slider-html/block.js?");

/***/ }),

/***/ "./source/slick-slider-html/controls-child.js":
/*!****************************************************!*\
  !*** ./source/slick-slider-html/controls-child.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ControlsSetChild = ControlsSetChild;\n\nvar _PannelUltimateBgControl = __webpack_require__(/*! ../common/PannelUltimateBgControl.js */ \"./source/common/PannelUltimateBgControl.js\");\n\nfunction ControlsSetChild(args) {\n\n  /* definitions */\n\n  var props = args.propsObject;\n  var atts = args.propsObject.attributes;\n\n  var __ = wp.i18n.__;\n  var _wp$blockEditor = wp.blockEditor,\n      MediaUpload = _wp$blockEditor.MediaUpload,\n      MediaUploadCheck = _wp$blockEditor.MediaUploadCheck,\n      MediaPlaceholder = _wp$blockEditor.MediaPlaceholder,\n      MediaReplaceFlow = _wp$blockEditor.MediaReplaceFlow;\n  var _wp$blockEditor2 = wp.blockEditor,\n      BlockVerticalAlignmentToolbar = _wp$blockEditor2.BlockVerticalAlignmentToolbar,\n      BlockControls = _wp$blockEditor2.BlockControls,\n      InspectorControls = _wp$blockEditor2.InspectorControls,\n      AlignmentToolbar = _wp$blockEditor2.AlignmentToolbar;\n  var _wp$components = wp.components,\n      Button = _wp$components.Button,\n      ToolbarGroup = _wp$components.ToolbarGroup,\n      Toolbar = _wp$components.Toolbar,\n      ToolbarButton = _wp$components.ToolbarButton,\n      Dashicon = _wp$components.Dashicon,\n      SVG = _wp$components.SVG,\n      Path = _wp$components.Path,\n      PanelBody = _wp$components.PanelBody,\n      PanelRow = _wp$components.PanelRow,\n      SelectControl = _wp$components.SelectControl,\n      IconButton = _wp$components.IconButton,\n      DropdownMenu = _wp$components.DropdownMenu,\n      MenuGroup = _wp$components.MenuGroup,\n      MenuItem = _wp$components.MenuItem,\n      MenuItemsChoice = _wp$components.MenuItemsChoice;\n  var _wp$element = wp.element,\n      useState = _wp$element.useState,\n      useEffect = _wp$element.useEffect,\n      Fragment = _wp$element.Fragment;\n  var useSelect = wp.data.useSelect;\n\n\n  var SectionBlockButtonWide = function SectionBlockButtonWide() {\n    return wp.element.createElement(\n      \"svg\",\n      { width: \"20\", height: \"20\", viewBox: \"0 0 20 20\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n      wp.element.createElement(\"rect\", { x: \"1\", y: \"5\", width: \"3\", height: \"10\", fill: \"#3498DB\" }),\n      wp.element.createElement(\"rect\", { x: \"16\", y: \"5\", width: \"3\", height: \"10\", fill: \"#3498DB\" }),\n      wp.element.createElement(\"path\", { d: \"M5 10L8.75 7.40192V12.5981L5 10Z\", fill: \"#555555\" }),\n      wp.element.createElement(\"path\", { d: \"M15 10L11.25 12.5981L11.25 7.40192L15 10Z\", fill: \"#555555\" })\n    );\n  };\n  var SectionBlockButtonVertical = function SectionBlockButtonVertical() {\n    return wp.element.createElement(\n      \"svg\",\n      { width: \"20\", height: \"20\", viewBox: \"0 0 20 20\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n      wp.element.createElement(\"rect\", { x: \"3\", y: \"11\", width: \"2\", height: \"14\", transform: \"rotate(-90 3 11)\", fill: \"#3498DB\" }),\n      wp.element.createElement(\"path\", { d: \"M10 17L7.40192 13.25H12.5981L10 17Z\", fill: \"#555555\" }),\n      wp.element.createElement(\"path\", { d: \"M10 3L12.5981 6.75L7.40192 6.75L10 3Z\", fill: \"#555555\" })\n    );\n  };\n  var SectionBlockButtonHorizontal = function SectionBlockButtonHorizontal() {\n    return wp.element.createElement(\n      \"svg\",\n      { width: \"20\", height: \"20\", viewBox: \"0 0 20 20\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n      wp.element.createElement(\"rect\", { x: \"9\", y: \"3\", width: \"2\", height: \"14\", fill: \"#3498DB\" }),\n      wp.element.createElement(\"path\", { d: \"M17 10L13.25 12.5981V7.40192L17 10Z\", fill: \"#555555\" }),\n      wp.element.createElement(\"path\", { d: \"M3 10L6.75 7.40192L6.75 12.5981L3 10Z\", fill: \"#555555\" })\n    );\n  };\n\n  var innerColumnsCount = useSelect(function (select) {\n    return select('core/block-editor').getBlocks(props.clientId).length;\n  }, [props.clientId]);\n\n  function addEmptyColumn() {\n    var block = wp.blocks.createBlock('k-blocks-bs-grid-child/k-blocks', { colMdBreakpoint: 6 });\n    wp.data.dispatch('core/block-editor').insertBlocks(block, innerColumnsCount, props.clientId);\n  }\n\n  /* output */\n\n  return wp.element.createElement(\n    Fragment,\n    null,\n    wp.element.createElement(\n      BlockControls,\n      null,\n      wp.element.createElement(\n        Toolbar,\n        null,\n        wp.element.createElement(ToolbarButton, {\n          icon: SectionBlockButtonWide,\n          label: __(\"Make content conteiner full width\"),\n          onClick: function onClick() {\n            props.setAttributes({ isSectionWide: !atts.isSectionWide });\n          },\n          isActive: !atts.isSectionWide\n        })\n      ),\n      wp.element.createElement(\n        Toolbar,\n        null,\n        wp.element.createElement(\n          DropdownMenu,\n          { icon: SectionBlockButtonHorizontal, label: \"Select a direction\" },\n          function (_ref) {\n            var onClose = _ref.onClose;\n            return wp.element.createElement(\n              MenuGroup,\n              { label: \"Horizontal Align Colums\" },\n              wp.element.createElement(MenuItemsChoice, {\n                choices: [{ value: 'justify-content-start', label: 'Start (default)' }, { value: 'justify-content-center', label: 'Center' }, { value: 'justify-content-end', label: 'End' }, { value: 'justify-content-between', label: 'Beetween' }, { value: 'justify-content-around', label: 'Around' }],\n                value: props.attributes.halign,\n                onSelect: function onSelect(mode) {\n                  return props.setAttributes({ halign: mode });\n                }\n\n              })\n            );\n          }\n        )\n      ),\n      wp.element.createElement(\n        Toolbar,\n        null,\n        wp.element.createElement(\n          DropdownMenu,\n          { icon: SectionBlockButtonVertical, label: \"Select a direction\" },\n          function (_ref2) {\n            var onClose = _ref2.onClose;\n            return wp.element.createElement(\n              MenuGroup,\n              { label: \"Vertical Align Colums\" },\n              wp.element.createElement(MenuItemsChoice, {\n                choices: [{ value: 'align-items-stretch', label: 'Stretch (default)' }, { value: 'align-items-start', label: 'Top' }, { value: 'align-items-center', label: 'Center' }, { value: 'align-items-end', label: 'Bottom' }],\n                value: props.attributes.valign,\n                onSelect: function onSelect(mode) {\n                  return props.setAttributes({ valign: mode });\n                }\n\n              })\n            );\n          }\n        )\n      ),\n      wp.element.createElement(\n        Toolbar,\n        null,\n        wp.element.createElement(ToolbarButton, {\n          icon: \"plus-alt2\",\n          title: \"Add new column\",\n          onClick: addEmptyColumn\n        })\n      )\n    ),\n    wp.element.createElement(\n      InspectorControls,\n      null,\n      wp.element.createElement(_PannelUltimateBgControl.PannelUltimateBgControl\n      // first toolbar: color block\n      , { colorValue: atts.color,\n        onColorChange: function onColorChange(newVal) {\n          return props.setAttributes({ color: newVal });\n        },\n        bgColorValue: atts.bgColor,\n        onBgColorChange: function onBgColorChange(newVal) {\n          return props.setAttributes({ bgColor: newVal });\n        }\n        // second toolbar: image block\n        , bgImgUrlValue: atts.bgImage,\n        bgImgIdValue: atts.bgImageId,\n        onBgImgSelect: function onBgImgSelect(newVal) {\n          return props.setAttributes({ bgImage: newVal.url, bgImageId: newVal.id });\n        },\n        onSetDefaultClick: function onSetDefaultClick() {\n          return props.setAttributes({ bgImage: \"none\", bgImageId: 0 });\n        }\n        // bg focal for second toolbar: optional\n        , bgFocalValue: atts.bgImageFocal,\n        onBgImageFocalChange: function onBgImageFocalChange(newVal) {\n          return props.setAttributes({ bgImageFocal: newVal });\n        }\n        // bg style for second toolbar: optional\n        , bgStyleValue: atts.bgImageType,\n        onBgStyleChange: function onBgStyleChange(newVal) {\n          return props.setAttributes({ bgImageType: newVal });\n        }\n        // third toolbar: gradient overlay block\n        , gradientOvelayValue: atts.bgGradient,\n        onGradientOverlayChange: function onGradientOverlayChange(newVal) {\n          return props.setAttributes({ bgGradient: newVal });\n        }\n      })\n    )\n  );\n} /** @jsx wp.element.createElement */\n//# sourceMappingURL=controls-child.js.map\n\n//# sourceURL=webpack:///./source/slick-slider-html/controls-child.js?");

/***/ }),

/***/ "./source/slick-slider-html/controls-parent.js":
/*!*****************************************************!*\
  !*** ./source/slick-slider-html/controls-parent.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ControlsSetParent = ControlsSetParent;\n\nvar _PannelUltimateBgControl = __webpack_require__(/*! ../common/PannelUltimateBgControl.js */ \"./source/common/PannelUltimateBgControl.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /** @jsx wp.element.createElement */\n\nfunction ControlsSetParent(args) {\n\n  /* definitions */\n\n  var props = args.propsObject;\n  var att = args.propsObject.attributes;\n\n  var __ = wp.i18n.__;\n  var _wp$blockEditor = wp.blockEditor,\n      MediaUpload = _wp$blockEditor.MediaUpload,\n      MediaUploadCheck = _wp$blockEditor.MediaUploadCheck,\n      MediaPlaceholder = _wp$blockEditor.MediaPlaceholder,\n      MediaReplaceFlow = _wp$blockEditor.MediaReplaceFlow;\n  var _wp$blockEditor2 = wp.blockEditor,\n      BlockVerticalAlignmentToolbar = _wp$blockEditor2.BlockVerticalAlignmentToolbar,\n      BlockControls = _wp$blockEditor2.BlockControls,\n      InspectorControls = _wp$blockEditor2.InspectorControls,\n      AlignmentToolbar = _wp$blockEditor2.AlignmentToolbar;\n  var _wp$components = wp.components,\n      Button = _wp$components.Button,\n      ButtonGroup = _wp$components.ButtonGroup,\n      ToolbarGroup = _wp$components.ToolbarGroup,\n      Toolbar = _wp$components.Toolbar,\n      ToolbarButton = _wp$components.ToolbarButton,\n      Dashicon = _wp$components.Dashicon,\n      SVG = _wp$components.SVG,\n      Path = _wp$components.Path,\n      PanelBody = _wp$components.PanelBody,\n      PanelRow = _wp$components.PanelRow,\n      SelectControl = _wp$components.SelectControl,\n      ColorIndicator = _wp$components.ColorIndicator,\n      RangeControl = _wp$components.RangeControl,\n      Flex = _wp$components.Flex,\n      FlexItem = _wp$components.FlexItem,\n      FlexBlock = _wp$components.FlexBlock,\n      Icon = _wp$components.Icon,\n      CheckboxControl = _wp$components.CheckboxControl,\n      Disabled = _wp$components.Disabled,\n      ToggleControl = _wp$components.ToggleControl,\n      __experimentalRadioGroup = _wp$components.__experimentalRadioGroup,\n      __experimentalRadio = _wp$components.__experimentalRadio;\n  var _wp$element = wp.element,\n      useState = _wp$element.useState,\n      useEffect = _wp$element.useEffect,\n      Fragment = _wp$element.Fragment;\n  var useSelect = wp.data.useSelect;\n\n\n  var slickPath = \"#html-gallery-\" + att.blockID;\n  function stop() {\n    jQuery(slickPath + \".slick-initialized\").slick('unslick');\n  }\n\n  var responsiveOptions = [];\n  if (att.responsiveSM) responsiveOptions.push({ breakpoint: 576, settings: { slidesToShow: att.slidesToShowSM, slidesToScroll: att.slidesToScrollSM } });\n  if (att.responsiveMD) responsiveOptions.push({ breakpoint: 768, settings: { slidesToShow: att.slidesToShowMD, slidesToScroll: att.slidesToScrollMD } });\n  if (att.responsiveLG) responsiveOptions.push({ breakpoint: 960, settings: { slidesToShow: att.slidesToShowLG, slidesToScroll: att.slidesToScrollLG } });\n  if (att.responsiveXL) responsiveOptions.push({ breakpoint: 1140, settings: { slidesToShow: att.slidesToShowXL, slidesToScroll: att.slidesToScrollXL } });\n\n  function start() {\n    jQuery(slickPath).not('.slick-initialized').slick({\n      slidesToShow: att.slidesToShow,\n      slidesToScroll: 1,\n      arrows: att.arrows,\n      dots: att.dots,\n      infinite: att.infinite,\n      autoplay: att.autoplay,\n      fade: false,\n      pauseOnHover: att.pauseOnHover,\n      pauseOnFocus: att.pauseOnFocus,\n      touchMove: false,\n      swipeToSlide: false,\n      responsive: responsiveOptions,\n      centerMode: att.centerMode,\n      adaptiveHeight: att.adaptiveHeight,\n      variableWidth: att.variableWidth\n    });\n  }\n  function prevSlide() {\n    jQuery(slickPath).slick('slickPrev');\n  }\n  function nextSlide() {\n    jQuery(slickPath).slick('slickNext');\n  }\n  function addEmptySlide() {\n    var slideProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var block = wp.blocks.createBlock('k-blocks-slick-html-child/k-blocks', slideProps);\n    wp.data.dispatch('core/block-editor').insertBlocks(block, 0, props.clientId);\n  }\n  function setSliderAttribute(attribute, newcontent) {\n    props.setAttributes(_defineProperty({}, attribute, newcontent));\n    jQuery(slickPath + \".slick-initialized\").slick('slickSetOption', _defineProperty({}, attribute, newcontent), true);\n  }\n  function setRestartAttribute(attribute, newcontent) {\n    stop();\n    props.setAttributes(_defineProperty({}, attribute, newcontent));\n  }\n\n  useEffect(function () {\n    if (props.editMode) stop();else start();\n  });\n\n  /* output */\n\n  return wp.element.createElement(\n    Fragment,\n    null,\n    wp.element.createElement(\n      BlockControls,\n      null,\n      !props.editMode && wp.element.createElement(\n        Toolbar,\n        null,\n        wp.element.createElement(ToolbarButton, {\n          icon: \"arrow-left-alt2\",\n          title: \"Previous Slide\",\n          onClick: prevSlide\n        }),\n        wp.element.createElement(ToolbarButton, {\n          icon: \"arrow-right-alt2\",\n          title: \"Next Slide\",\n          onClick: nextSlide\n        })\n      ),\n       false && false,\n      wp.element.createElement(\n        Toolbar,\n        null,\n        wp.element.createElement(ToolbarButton, {\n          icon: \"edit\",\n          title: \"Edit mode\",\n          onClick: props.toggleEditMode,\n          isActive: props.editMode\n        })\n      )\n    ),\n    wp.element.createElement(\n      InspectorControls,\n      null,\n      wp.element.createElement(\n        PanelBody,\n        { title: __('Slider options') },\n        wp.element.createElement(\n          Button,\n          {\n            icon: \"edit\",\n            title: \"Edit mode\",\n            isSecondary: true,\n            style: { 'marginTop': '0.5rem', 'marginBottom': '1.5rem' },\n            onClick: props.toggleEditMode,\n            isActive: props.editMode\n          },\n          props.editMode && __('Preview mode'),\n          \" \",\n          !props.editMode && __('Edit mode')\n        ),\n        wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(RangeControl, {\n            value: att.minHeight,\n            onChange: function onChange(newvalue) {\n              return props.setAttributes({ minHeight: newvalue });\n            },\n            min: 0,\n            max: 50,\n            label: __('Slide body min height' + ' (Rem)'),\n            type: \"Rem\"\n          }),\n          wp.element.createElement(RangeControl, {\n            value: att.slidesToShow,\n            onChange: function onChange(newval) {\n              if (newval != 1) props.setAttributes({ fade: false });\n              setSliderAttribute('slidesToShow', newval);\n            },\n            min: 1,\n            max: 12,\n            label: __('Slides to Show')\n          }),\n          wp.element.createElement(RangeControl, {\n            value: att.slidesToScroll,\n            onChange: function onChange(newval) {\n              return setSliderAttribute('slidesToScroll', newval);\n            },\n            min: 1,\n            max: 12,\n            label: __('Slides to Scroll')\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __('Arrows'),\n            checked: att.arrows,\n            onChange: function onChange() {\n              return setSliderAttribute('arrows', !att.arrows);\n            }\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __('Dots'),\n            checked: att.dots,\n            onChange: function onChange() {\n              return setSliderAttribute('dots', !att.dots);\n            }\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __('Infinite'),\n            checked: att.infinite,\n            onChange: function onChange() {\n              return setSliderAttribute('infinite', !att.infinite);\n            }\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __('Autoplay'),\n            checked: att.autoplay,\n            onChange: function onChange() {\n              return setSliderAttribute('autoplay', !att.autoplay);\n            }\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __('Pause autoplay on hover'),\n            checked: att.pauseOnHover,\n            onChange: function onChange() {\n              return setSliderAttribute('pauseOnHover', !att.pauseOnHover);\n            }\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __('Fade'),\n            checked: att.fade,\n            onChange: function onChange() {\n              setSliderAttribute('slidesToShow', 1);\n              setSliderAttribute('slidesToScroll', 1);\n              props.setAttributes({ fade: !att.fade, responsiveSM: false, responsiveMD: false, responsiveLG: false, responsiveXL: false });\n            }\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __('Center Mode'),\n            checked: att.centerMode,\n            onChange: function onChange() {\n              return setRestartAttribute('centerMode', !att.centerMode);\n            }\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __('Adaptive Height'),\n            checked: att.adaptiveHeight,\n            onChange: function onChange() {\n              return setRestartAttribute('adaptiveHeight', !att.adaptiveHeight);\n            }\n          }),\n          wp.element.createElement(ToggleControl, {\n            label: __('Variable Width'),\n            checked: att.variableWidth,\n            onChange: function onChange() {\n              return setRestartAttribute('variableWidth', !att.variableWidth);\n            }\n          })\n        )\n      ),\n      wp.element.createElement(\n        PanelBody,\n        { title: __('Control style options'), initialOpen: false },\n        att.arrows && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '1rem', 'marginTop': '0.5rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: \"css-wdf2ti-Wrapper\" },\n              wp.element.createElement(\n                \"label\",\n                { className: \"k-sliderlabel\" },\n                \"Arrows Color\",\n                wp.element.createElement(ColorIndicator, { colorValue: att.arrowsColorClass ? \"#ffffff\" : \"#1e1e1e\" })\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(\n                ButtonGroup,\n                null,\n                wp.element.createElement(\n                  Button,\n                  { isSmall: true, className: att.arrowsColorClass == '' ? 'is-primary' : '', onClick: function onClick() {\n                      return props.setAttributes({ arrowsColorClass: \"\" });\n                    } },\n                  \"Dark\"\n                ),\n                wp.element.createElement(\n                  Button,\n                  { isSmall: true, className: att.arrowsColorClass == 'light-arrows' ? 'is-primary' : '', onClick: function onClick() {\n                      return props.setAttributes({ arrowsColorClass: \"light-arrows\" });\n                    } },\n                  \"Light\"\n                )\n              )\n            )\n          ),\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '0.5rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: \"css-wdf2ti-Wrapper\" },\n              wp.element.createElement(\n                \"label\",\n                null,\n                \"Arrow Size\"\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(SelectControl, {\n                value: att.arrowsSizeClass,\n                options: [{ label: 'Big', value: 'big-arrows' }, { label: 'Medium', value: '' }, { label: 'Small', value: 'small-arrows' }],\n                onChange: function onChange(size) {\n                  return props.setAttributes({ arrowsSizeClass: size });\n                }\n              })\n            )\n          ),\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '2rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: \"css-wdf2ti-Wrapper\" },\n              wp.element.createElement(\n                \"label\",\n                null,\n                \"Arrow Position\"\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(SelectControl, {\n                value: att.arrowsPositionClass,\n                options: [{ label: 'Outside', value: 'arrows-outer' }, { label: 'Inside', value: 'arrows-inner' }, { label: 'Bottom', value: 'arrows-bottom' }],\n                onChange: function onChange(pos) {\n                  return props.setAttributes({ arrowsPositionClass: pos });\n                }\n              })\n            )\n          )\n        ),\n        att.dots && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '1rem', 'marginTop': '0.5rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: \"css-wdf2ti-Wrapper\" },\n              wp.element.createElement(\n                \"label\",\n                { className: \"k-sliderlabel\" },\n                \"Dots Color\",\n                wp.element.createElement(ColorIndicator, { colorValue: att.dotsColorClass ? \"#ffffff\" : \"#1e1e1e\" })\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(\n                ButtonGroup,\n                null,\n                wp.element.createElement(\n                  Button,\n                  { isSmall: true, className: att.dotsColorClass == '' ? 'is-primary' : '', onClick: function onClick() {\n                      return props.setAttributes({ dotsColorClass: \"\" });\n                    } },\n                  \"Dark\"\n                ),\n                wp.element.createElement(\n                  Button,\n                  { isSmall: true, className: att.dotsColorClass == 'light-dots' ? 'is-primary' : '', onClick: function onClick() {\n                      return props.setAttributes({ dotsColorClass: \"light-dots\" });\n                    } },\n                  \"Light\"\n                )\n              )\n            )\n          ),\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '0.5rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: \"css-wdf2ti-Wrapper\" },\n              wp.element.createElement(\n                \"label\",\n                null,\n                \"Dots Size\"\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(SelectControl, {\n                value: att.dotsSizeClass,\n                options: [{ label: 'Big', value: 'big-dots' }, { label: 'Medium', value: '' }, { label: 'Small', value: 'small-dots' }],\n                onChange: function onChange(size) {\n                  return props.setAttributes({ dotsSizeClass: size });\n                }\n              })\n            )\n          ),\n          wp.element.createElement(\n            Flex,\n            { style: { 'marginBottom': '2rem' } },\n            wp.element.createElement(\n              FlexItem,\n              { className: \"css-wdf2ti-Wrapper\" },\n              wp.element.createElement(\n                \"label\",\n                null,\n                \"Dots Position\"\n              )\n            ),\n            wp.element.createElement(\n              FlexItem,\n              null,\n              wp.element.createElement(SelectControl, {\n                value: att.dotsPositionClass,\n                options: [{ label: 'Outer', value: '' }, { label: 'Inner', value: 'dots-inner' }],\n                onChange: function onChange(pos) {\n                  return props.setAttributes({ dotsPositionClass: pos });\n                }\n              })\n            )\n          )\n        )\n      ),\n      wp.element.createElement(\n        PanelBody,\n        { title: __('Responsive options'), initialOpen: false },\n        wp.element.createElement(CheckboxControl, {\n          label: __('Add breakpoint' + ' SM'),\n          checked: att.responsiveSM,\n          onChange: function onChange() {\n            if (att.responsiveSM) props.setAttributes({ fade: false });\n            setRestartAttribute('responsiveSM', !att.responsiveSM);\n          }\n        }),\n        att.responsiveSM && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(RangeControl, {\n            beforeIcon: \"columns\",\n            label: __('Slides to show'),\n            value: att.slidesToShowSM,\n            onChange: function onChange(newcontent) {\n              return setRestartAttribute('slidesToShowSM', newcontent);\n            },\n            min: 1,\n            max: 10\n          }),\n          wp.element.createElement(RangeControl, {\n            beforeIcon: \"share-alt2\",\n            label: __('Slides to scroll'),\n            value: att.slidesToScrollSM,\n            onChange: function onChange(newcontent) {\n              return setRestartAttribute('slidesToScrollSM', newcontent);\n            },\n            min: 1,\n            max: 10\n          })\n        ),\n        wp.element.createElement(CheckboxControl, {\n          label: __('Add breakpoint' + ' MD'),\n          checked: att.responsiveMD,\n          onChange: function onChange() {\n            if (att.responsiveSM) props.setAttributes({ fade: false });\n            setRestartAttribute('responsiveMD', !att.responsiveMD);\n          }\n        }),\n        att.responsiveMD && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(RangeControl, {\n            beforeIcon: \"columns\",\n            label: __('Slides to show'),\n            value: att.slidesToShowMD,\n            onChange: function onChange(newcontent) {\n              if (att.responsiveSM) props.setAttributes({ fade: false });\n              setRestartAttribute('slidesToShowMD', newcontent);\n            },\n            min: 1,\n            max: 10\n          }),\n          wp.element.createElement(RangeControl, {\n            beforeIcon: \"share-alt2\",\n            label: __('Slides to scroll'),\n            value: att.slidesToScrollMD,\n            onChange: function onChange(newcontent) {\n              return setRestartAttribute('slidesToScrollMD', newcontent);\n            },\n            min: 1,\n            max: 10\n          })\n        ),\n        wp.element.createElement(CheckboxControl, {\n          label: __('Add breakpoint' + ' LG'),\n          checked: att.responsiveLG,\n          onChange: function onChange() {\n            if (att.responsiveSM) props.setAttributes({ fade: false });\n            setRestartAttribute('responsiveLG', !att.responsiveLG);\n          }\n        }),\n        att.responsiveLG && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(RangeControl, {\n            beforeIcon: \"columns\",\n            label: __('Slides to show'),\n            value: att.slidesToShowLG,\n            onChange: function onChange(newcontent) {\n              return setRestartAttribute('slidesToShowLG', newcontent);\n            },\n            min: 1,\n            max: 10\n          }),\n          wp.element.createElement(RangeControl, {\n            beforeIcon: \"share-alt2\",\n            label: __('Slides to scroll'),\n            value: att.slidesToScrollLG,\n            onChange: function onChange(newcontent) {\n              return setRestartAttribute('slidesToScrollLG', newcontent);\n            },\n            min: 1,\n            max: 10\n          })\n        ),\n        wp.element.createElement(CheckboxControl, {\n          label: __('Add breakpoint' + ' XL'),\n          checked: att.responsiveXL,\n          onChange: function onChange() {\n            if (att.responsiveSM) props.setAttributes({ fade: false });\n            setRestartAttribute('responsiveXL', !att.responsiveXL);\n          }\n        }),\n        att.responsiveXL && wp.element.createElement(\n          Fragment,\n          null,\n          wp.element.createElement(RangeControl, {\n            beforeIcon: \"columns\",\n            label: __('Slides to show'),\n            value: att.slidesToShowXL,\n            onChange: function onChange(newcontent) {\n              return setRestartAttribute('slidesToShowXL', newcontent);\n            },\n            min: 1,\n            max: 10\n          }),\n          wp.element.createElement(RangeControl, {\n            beforeIcon: \"share-alt2\",\n            label: __('Slides to scroll'),\n            value: att.slidesToScrollXL,\n            onChange: function onChange(newcontent) {\n              return setRestartAttribute('slidesToScrollXL', newcontent);\n            },\n            min: 1,\n            max: 10\n          })\n        )\n      )\n    )\n  );\n}\n//# sourceMappingURL=controls-parent.js.map\n\n//# sourceURL=webpack:///./source/slick-slider-html/controls-parent.js?");

/***/ })

/******/ });